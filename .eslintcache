[{"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/index.js":"1","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/App.js":"2","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/serviceWorker.js":"3","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/store.js":"4","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/PrivateRoute.js":"5","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Guest.js":"6","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Admin.js":"7","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/index.js":"8","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/routes.js":"9","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/errorReducer.js":"10","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/evseReducer.js":"11","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/authReducer.js":"12","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/locationReducer.js":"13","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/connectorReducer.js":"14","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/vehiculeReducer.js":"15","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/Footer.js":"16","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/GuestFooter.js":"17","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Sidebar/Sidebar.js":"18","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/AdminNavbar.js":"19","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/GuestNavbar.js":"20","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/types.js":"21","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/validation/is-empty.js":"22","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/MapsGuest.js":"23","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/authActions.js":"24","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/TableList.js":"25","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/cpo/Bornes.js":"26","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Login.js":"27","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Upgrade.js":"28","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Register.js":"29","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Typography.js":"30","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/UserProfile.js":"31","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Maps.js":"32","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Borne.js":"33","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Vehicule.js":"34","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Dashboard.js":"35","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/api.js":"36","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/greenEnergyTypes.js":"37","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/bookable.js":"38","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/payment.js":"39","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/guest/MapGuest.js":"40","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/locationAction.js":"41","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectionType.js":"42","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/vehiculeActions.js":"43","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorFormat.js":"44","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/powerTypes.js":"45","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/cpo/Map.js":"46","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/hooks/usePosition.js":"47","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorTypes.js":"48","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/msp/Map.js":"49","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/roles.js":"50"},{"size":429,"mtime":1632485356381,"results":"51","hashOfConfig":"52"},{"size":1842,"mtime":1632162992840,"results":"53","hashOfConfig":"52"},{"size":4812,"mtime":1627905833084,"results":"54","hashOfConfig":"52"},{"size":449,"mtime":1627905833092,"results":"55","hashOfConfig":"52"},{"size":804,"mtime":1630318329664,"results":"56","hashOfConfig":"52"},{"size":2429,"mtime":1632162993248,"results":"57","hashOfConfig":"52"},{"size":3007,"mtime":1632162993248,"results":"58","hashOfConfig":"52"},{"size":508,"mtime":1629812307780,"results":"59","hashOfConfig":"52"},{"size":2769,"mtime":1633527762527,"results":"60","hashOfConfig":"52"},{"size":299,"mtime":1627903730752,"results":"61","hashOfConfig":"52"},{"size":451,"mtime":1627903730756,"results":"62","hashOfConfig":"52"},{"size":625,"mtime":1632469582933,"results":"63","hashOfConfig":"52"},{"size":620,"mtime":1632473905745,"results":"64","hashOfConfig":"52"},{"size":475,"mtime":1629799929558,"results":"65","hashOfConfig":"52"},{"size":623,"mtime":1633608116874,"results":"66","hashOfConfig":"52"},{"size":1827,"mtime":1632355332300,"results":"67","hashOfConfig":"52"},{"size":1827,"mtime":1632355324916,"results":"68","hashOfConfig":"52"},{"size":2801,"mtime":1632369358994,"results":"69","hashOfConfig":"52"},{"size":5341,"mtime":1632355060488,"results":"70","hashOfConfig":"52"},{"size":4430,"mtime":1632316305086,"results":"71","hashOfConfig":"52"},{"size":773,"mtime":1633608041226,"results":"72","hashOfConfig":"52"},{"size":223,"mtime":1627905833140,"results":"73","hashOfConfig":"52"},{"size":1003,"mtime":1632365552346,"results":"74","hashOfConfig":"52"},{"size":2270,"mtime":1632470128497,"results":"75","hashOfConfig":"52"},{"size":2909,"mtime":1629020060692,"results":"76","hashOfConfig":"77"},{"size":294,"mtime":1632162993324,"results":"78","hashOfConfig":"52"},{"size":3842,"mtime":1632366132934,"results":"79","hashOfConfig":"52"},{"size":3857,"mtime":1629283462184,"results":"80","hashOfConfig":"77"},{"size":7086,"mtime":1632477646741,"results":"81","hashOfConfig":"52"},{"size":5574,"mtime":1629283963904,"results":"82","hashOfConfig":"77"},{"size":14662,"mtime":1632468675445,"results":"83","hashOfConfig":"52"},{"size":6369,"mtime":1632488947376,"results":"84","hashOfConfig":"52"},{"size":14284,"mtime":1632480119869,"results":"85","hashOfConfig":"52"},{"size":10655,"mtime":1633614849981,"results":"86","hashOfConfig":"52"},{"size":21242,"mtime":1632162993256,"results":"87","hashOfConfig":"52"},{"size":120,"mtime":1630450965822,"results":"88","hashOfConfig":"52"},{"size":218,"mtime":1632162993184,"results":"89","hashOfConfig":"52"},{"size":198,"mtime":1632162993044,"results":"90","hashOfConfig":"52"},{"size":231,"mtime":1632162993184,"results":"91","hashOfConfig":"52"},{"size":3240,"mtime":1632162993360,"results":"92","hashOfConfig":"52"},{"size":1991,"mtime":1632475342289,"results":"93","hashOfConfig":"52"},{"size":358,"mtime":1632266196945,"results":"94","hashOfConfig":"52"},{"size":1440,"mtime":1633614269437,"results":"95","hashOfConfig":"52"},{"size":358,"mtime":1632162993128,"results":"96","hashOfConfig":"52"},{"size":204,"mtime":1632162993184,"results":"97","hashOfConfig":"52"},{"size":5515,"mtime":1632480934705,"results":"98","hashOfConfig":"52"},{"size":1174,"mtime":1632162993248,"results":"99","hashOfConfig":"52"},{"size":2668,"mtime":1632481704409,"results":"100","hashOfConfig":"52"},{"size":6064,"mtime":1632488779492,"results":"101","hashOfConfig":"52"},{"size":287,"mtime":1632361916800,"results":"102","hashOfConfig":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"27hg76",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"83xtx",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"105"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/index.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/App.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/serviceWorker.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/store.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/PrivateRoute.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Guest.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Admin.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/index.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/routes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/errorReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/evseReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/authReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/locationReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/connectorReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/vehiculeReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/Footer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/GuestFooter.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Sidebar/Sidebar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/AdminNavbar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/GuestNavbar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/types.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/validation/is-empty.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/MapsGuest.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/authActions.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/TableList.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/cpo/Bornes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Login.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Upgrade.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Register.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Typography.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/UserProfile.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Maps.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Borne.js",["211"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addLocation, getCPOLocations } from '../actions/locationAction';\n\nimport connectionTypeOptions from './../constants/connectionType';\n\n// react-bootstrap components\nimport {\n  Button,\n  Card,\n  Form,\n  ToggleButton,\n  ToggleButtonGroup,\n  ButtonGroup,\n  Container,\n  Row,\n  Col,\n  Table,\n  Badge,\n} from 'react-bootstrap';\nimport { usePosition } from '../hooks/usePosition';\n\nfunction Borne({ locations, loading, addLocation, user, getCPOLocations }) {\n  const [hasImage, setHasImage] = useState(true);\n  const [image, setImage] = useState();\n  const [color, setColor] = useState();\n  const initalValues = {\n    name: '',\n    address: '',\n    city: '',\n    bookable: false,\n    connection: '',\n    condition_acces: '',\n    payment_by_card: false,\n    location_type: '',\n    telephone_operateur: '',\n    postal_code: '',\n  };\n  const { latitude, longitude } = usePosition();\n\n  const [locationProperties, setlocationProperties] = useState(initalValues);\n\n  const handleInputChange = (value, fieldName) => {\n    setlocationProperties(prevState => ({ ...prevState, [fieldName]: value }));\n  };\n\n  const _addLocation = _user => {\n    if (locationProperties.name !== '') {\n      const id = _user.id;\n      addLocation({\n        ...locationProperties,\n        position: {\n          latitude: latitude.toString(),\n          longitude: longitude.toString(),\n        },\n        userId: id,\n      });\n      console.log('locationProperties', locationProperties);\n      setlocationProperties(initalValues);\n    } else return;\n  };\n\n  useEffect(() => {\n    getCPOLocations(user.id);\n  }, []);\n\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <Card.Title as='h4'>Ajouter une borne</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form>\n                  <Row>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Titre</label>\n                        <Form.Control\n                          placeholder='Titre'\n                          type='text'\n                          name='name'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Type d'emplacement</label>\n                        <Form.Control\n                          placeholder='Station service, parking,...'\n                          type='text'\n                          name='location_type'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='12'>\n                      <Form.Group>\n                        <label>Adresse</label>\n                        <Form.Control\n                          placeholder='Adresse'\n                          type='text'\n                          name='address'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='3'>\n                      {/* <Form.Group className='mb-3' id='formGridCheckbox'> */}{' '}\n                      <label>Type de connection aux stations</label>\n                      <br />\n                      <ButtonGroup>\n                        {connectionTypeOptions.map(option => (\n                          <ToggleButton\n                            key={option.id}\n                            id={`option-${option.id}`}\n                            type='checkbox'\n                            value={option.value}\n                            name='connection'\n                            onChange={e =>\n                              handleInputChange(prevState => ({\n                                ...prevState,\n                                energy: e.target.value,\n                              }))\n                            }\n                          >\n                            {option.value}\n                          </ToggleButton>\n                        ))}\n                      </ButtonGroup>{' '}\n                    </Col>\n                    <Col md='3'>\n                      <label>Reservation</label>\n                      <fieldset>\n                        <ButtonGroup>\n                          <br />\n                          <ToggleButton\n                            className='mb-2'\n                            id='isbookable-switch'\n                            type='checkbox'\n                            label='Reservable'\n                            onChange={e =>\n                              setlocationProperties(prev => ({\n                                ...prev,\n                                bookable: !prev.bookable,\n                              }))\n                            }\n                          >\n                            Disponible\n                          </ToggleButton>\n                          <ToggleButton\n                            className='mb-2'\n                            id='bookable-switch'\n                            type='checkbox'\n                            label='Non Reservable'\n                            onChange={e =>\n                              setlocationProperties(prev => ({\n                                ...prev,\n                                bookable: !prev.bookable,\n                              }))\n                            }\n                          >\n                            Indisponible\n                          </ToggleButton>\n                        </ButtonGroup>\n                      </fieldset>\n                    </Col>\n                    <Col md='3'>\n                      <label>Paiement par carte bancaire</label>\n                      <fieldset>\n                        <ButtonGroup>\n                          <br />\n                          <ToggleButton\n                            className='mb-2'\n                            id='payment_by_card-switch'\n                            type='checkbox'\n                            onChange={e =>\n                              setlocationProperties(prev => ({\n                                ...prev,\n                                payment_by_card: !prev.payment_by_card,\n                              }))\n                            }\n                          >\n                            Disponible\n                          </ToggleButton>\n                          <ToggleButton\n                            className='mb-2'\n                            id='payment_by_card-switch'\n                            type='checkbox'\n                            onChange={e =>\n                              setlocationProperties(prev => ({\n                                ...prev,\n                                payment_by_card: !prev.payment_by_card,\n                              }))\n                            }\n                          >\n                            Indisponible\n                          </ToggleButton>\n                        </ButtonGroup>\n                      </fieldset>\n                    </Col>\n                    <Col md='3'>\n                      <label>Recharge</label>\n                      <fieldset>\n                        <ButtonGroup>\n                          <br />\n                          <ToggleButton\n                            className='mb-2'\n                            id='payment_by_card-switch'\n                            type='checkbox'\n                            onChange={e =>\n                              setlocationProperties(prev => ({\n                                ...prev,\n                                payment_by_card: !prev.payment_by_card,\n                              }))\n                            }\n                          >\n                            Gratuite\n                          </ToggleButton>\n                          <ToggleButton\n                            className='mb-2'\n                            id='payment_by_card-switch'\n                            type='checkbox'\n                            onChange={e =>\n                              setlocationProperties(prev => ({\n                                ...prev,\n                                payment_by_card: !prev.payment_by_card,\n                              }))\n                            }\n                          >\n                            Payante\n                          </ToggleButton>\n                        </ButtonGroup>\n                      </fieldset>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Ville</label>\n                        <Form.Control\n                          placeholder='Ville'\n                          type='text'\n                          name='city'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Condition d'accès</label>\n                        <Form.Control\n                          placeholder=''\n                          type='text'\n                          name='condition_acces'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Téléphone opérateur</label>\n                        <Form.Control\n                          placeholder='+000 000 000'\n                          type='text'\n                          name='telephone_operateur'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Latitude</label>\n                        <Form.Control\n                          disabled\n                          type='text'\n                          value={latitude ? latitude : 'latitude'}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Longitude</label>\n                        <Form.Control\n                          disabled\n                          type='text'\n                          value={longitude ? longitude : 'longitude'}\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Button\n          className='btn-fill pull-right'\n          type='submit'\n          onClick={() => _addLocation(user)}\n        >\n          Ajouter\n        </Button>\n      </Container>{' '}\n      <br />\n      {loading ? (\n        <div> Chargement ...</div>\n      ) : (\n        <Container fluid>\n          <Row>\n            <Col md='12'>\n              <Card className='strpied-tabled-with-hover'>\n                <Card.Header>\n                  <Card.Title as='h4'>Mes Bornes </Card.Title>\n                  <p className='card-category'>Bornes enregistrées</p>\n                </Card.Header>\n                <Card.Body className='table-full-width table-responsive px-0'>\n                  <Table className='table-hover table-striped'>\n                    <thead>\n                      <tr>\n                        <th className='border-0'>Titre</th>\n                        <th className='border-0'>Type</th>\n                        <th className='border-0'>Adresse</th>\n                        {/* <th className='border-0'>Standard</th>\n                        <th className='border-0'>Voltage Maximum</th>\n                        <th className='border-0'>Type de Puissance</th>\n                        <th className='border-0'>Ampérage Maximum</th> */}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {locations?.length ? (\n                        locations?.map(location => {\n                          return (\n                            <tr>\n                              <td>{location.location_name}</td>\n                              <td>{location.location_type}</td>\n                              <td>{location.address}</td>\n                              {/* <td>{location.standard}</td>\n                              <td>{location.max_voltage}</td>\n                              <td>{location.power_type}</td>\n                              <td>{location.max_amperage}</td>{' '} */}\n                            </tr>\n                          );\n                        })\n                      ) : (\n                        <td>{'Vide'}</td>\n                      )}{' '}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  loading: state.vehicule.loading,\n  user: state.auth.user,\n  locations: state.location.locations,\n});\n\nexport default connect(mapStateToProps, { getCPOLocations, addLocation })(\n  Borne\n);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Vehicule.js",["212"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addVehicule } from '../actions/vehiculeActions';\nimport { getVehicules } from '../actions/vehiculeActions';\n\nimport connectorTypeOptions from './../constants/connectorTypes';\nimport connectorFormatOptions from './../constants/connectorFormat';\nimport connectorPowerTypesOptions from './../constants/powerTypes';\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  Table,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from 'react-bootstrap';\n\nfunction Vehicule({ vehicules, loading, addVehicule, user, getVehicules }) {\n  const initalValues = {\n    id: '',\n    brand: '',\n    model: '',\n    standard: '',\n    format: '',\n    power_type: '',\n    max_voltage: '',\n    max_amperage: '',\n  };\n  const [vehiculeProperties, setvehiculeProperties] = useState(initalValues);\n\n  const [image, setImage] = useState();\n\n  const handleInputChange = (value, fieldName) => {\n    setvehiculeProperties(prevState => ({ ...prevState, [fieldName]: value }));\n  };\n\n  const add = _user => {\n    //const id = _user.id;\n    if (vehiculeProperties.brand !== '' && vehiculeProperties.model !== '') {\n      addVehicule({ ...vehiculeProperties, userId: _user.id });\n      setvehiculeProperties(initalValues);\n    } else return;\n  };\n  useEffect(() => {\n    console.log('user', user);\n    console.log('useeffect vehicules', vehicules);\n    const id = user.id;\n    getVehicules(id);\n  }, [getVehicules]);\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <Card.Title as='h4'>Ajouter un Véhicule Electrique</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form>\n                  <Row>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Marque</label>\n                        <Form.Control\n                          placeholder='Marque'\n                          type='text'\n                          name='brand'\n                          value={vehiculeProperties.brand}\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Modèle</label>\n                        <Form.Control\n                          placeholder='Modèle'\n                          type='text'\n                          name='model'\n                          value={vehiculeProperties.model}\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='4'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        name='standard'\n                        value={vehiculeProperties.standard}\n                        onChange={e =>\n                          handleInputChange(e.target.value, e.target.name)\n                        }\n                      >\n                        <option defaultValue=''>Type de connecteur</option>\n                        {connectorTypeOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md='4'>\n                      {/* <ul>\n                        {connectorTypeOptions.map((option, idx) => (\n                          <li>\n                            <a\n                              className='img-holder switch-trigger d-block'\n                              onClick={e => {\n                                e.preventDefault();\n                                setImage(option.value);\n                              }}\n                            >\n                              <img alt='...' src={option.value} />\n                            </a>\n                          </li>\n                        ))}\n                      </ul> */}\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        name='format'\n                        value={vehiculeProperties.format}\n                        onChange={e =>\n                          handleInputChange(e.target.value, e.target.name)\n                        }\n                      >\n                        <option defaultValue=''>Format connecteur</option>\n                        {connectorFormatOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n\n                    <Col md='4'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        name='format'\n                        value={vehiculeProperties.format}\n                        onChange={e =>\n                          handleInputChange(e.target.value, e.target.name)\n                        }\n                      >\n                        <option defaultValue=''>Type de Puissance</option>\n                        {connectorPowerTypesOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Type de puissance</label>\n                        <Form.Control\n                          placeholder='Puissance'\n                          type='text'\n                          name='power_type'\n                          value={vehiculeProperties.power_type}\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Voltage Maximum</label>\n                        <Form.Control\n                          placeholder='Voltage'\n                          type='text'\n                          name='max_voltage'\n                          value={vehiculeProperties.max_voltage}\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Ampérage Maximum</label>\n                        <Form.Control\n                          placeholder='Ampérage'\n                          type='text'\n                          name='max_amperage'\n                          value={vehiculeProperties.max_amperage}\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Button\n          className='btn-fill pull-right'\n          type='submit'\n          onClick={() => add(user)}\n        >\n          Ajouter\n        </Button>\n      </Container>\n      <br />\n      {loading ? (\n        <div> Chargement ...</div>\n      ) : (\n        <Container fluid>\n          <Row>\n            <Col md='12'>\n              <Card className='strpied-tabled-with-hover'>\n                <Card.Header>\n                  <Card.Title as='h4'>Mes EVs</Card.Title>\n                  <p className='card-category'>EVs enregistrés</p>\n                </Card.Header>\n                <Card.Body className='table-full-width table-responsive px-0'>\n                  <Table className='table-hover table-striped'>\n                    <thead>\n                      <tr>\n                        <th className='border-0'>Marque</th>\n                        <th className='border-0'>Modèle</th>\n                        <th className='border-0'>Format Connecteur</th>\n                        <th className='border-0'>Standard</th>\n                        <th className='border-0'>Voltage Maximum</th>\n                        <th className='border-0'>Type de Puissance</th>\n                        <th className='border-0'>Ampérage Maximum</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {vehicules?.length ? (\n                        vehicules?.map(vehicule => {\n                          return (\n                            <tr>\n                              <td>{vehicule.brand}</td>\n                              <td>{vehicule.model}</td>\n                              <td>{vehicule.format}</td>\n                              <td>{vehicule.standard}</td>\n                              <td>{vehicule.max_voltage}</td>\n                              <td>{vehicule.power_type}</td>\n                              <td>{vehicule.max_amperage}</td>{' '}\n                            </tr>\n                          );\n                        })\n                      ) : (\n                        <p>{''}</p>\n                      )}{' '}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  vehicules: state.vehicule.vehicules,\n  loading: state.vehicule.loading,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { getVehicules, addVehicule })(\n  Vehicule\n);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Dashboard.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/api.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/greenEnergyTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/bookable.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/payment.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/guest/MapGuest.js",["213"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\n\nfunction MapGuest({ options, className, locations, getLocations, filters }) {\n  const ref = useRef();\n  const [map, setMap] = useState(null);\n  // const { latitude, longitude } = usePosition();\n  const [markers, setMarkers] = useState();\n\n  const addMarkers = (locations, mapInstance) => {\n    // Deleting previous markers before adding the new list of markers\n    if (markers) {\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      setMarkers([]);\n    }\n    let tmp = [];\n    locations.forEach(location => {\n      const marker = new window.google.maps.Marker({\n        mapInstance,\n        position: new window.google.maps.LatLng(\n          location.coordinates.latitude,\n          location.coordinates.longitude\n        ),\n        title: location.station_name,\n      });\n      marker.setMap(mapInstance);\n      const infowindow = new window.google.maps.InfoWindow({\n        content: location.station_name,\n        boxStyle: {\n          width: '300px',\n          height: '300px',\n        },\n      });\n      marker.addListener(`mouseover`, () => {\n        infowindow.open(mapInstance, marker);\n      });\n      marker.addListener(`mouseout`, () => {\n        infowindow.close(mapInstance, marker);\n      });\n\n      tmp.push(marker);\n    });\n    setMarkers(tmp);\n  };\n  useEffect(() => {\n    const onLoad = () => {\n      const options = {\n        lat: 45.891181,\n        lng: 4.8223994,\n        zoom: 12,\n      };\n      // if (latitude && longitude) {\n      //   options.lat = latitude;\n      //   options.lng = longitude;\n      //   options.zoom = 7;\n      // }\n      const map = new window.google.maps.Map(ref.current, {\n        center: options,\n        zoom: 15,\n      });\n\n      if (map) {\n        console.log('map', map);\n        setMap(map);\n        getLocations();\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, [options, getLocations]);\n\n  useEffect(() => {\n    if (locations.length && map) {\n      addMarkers(locations, map);\n    }\n    console.log('locations from the server', locations);\n  }, [locations, map]);\n\n  useEffect(() => {\n    if (map) {\n      //   map.MapMouseEvent(`onclick`, () => {\n      //     console.log('click on map');\n      //   });\n\n      console.log('aha');\n    }\n  }, [map]);\n\n  // if (map && typeof onMount === `function`) onMount(map, onMountProps);\n\n  return (\n    <div\n      style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n      {...{ ref, className }}\n    />\n  );\n}\n\n// Map.defaultProps = mapOptions;\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n});\n\nexport default connect(mapStateToProps, { getLocations })(MapGuest);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/locationAction.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectionType.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/vehiculeActions.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorFormat.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/powerTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/cpo/Map.js",["214","215","216"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getCPOLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\nimport { usePosition } from '../../hooks/usePosition';\nimport { Alert, Button } from 'react-bootstrap';\n\nconst Map = ({ user, locations, filters }) => {\n  // const  = props;\n\n  const [map, setMap] = useState();\n  const ref = useRef(null);\n  // const { latitude, longitude } = usePosition();\n  const [markers, setMarkers] = useState([]);\n  const [mybounds, setmybounds] = useState({\n    lat: 45.891181, //45.891181\n    lng: 4.8223994, // 4.8223994\n  });\n\n  const removeMarkers = markersArray => {\n    markersArray?.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n  };\n  const addMarkers = (locs, mapInstance) => {\n    markers.forEach(marker => marker.setMap(null));\n    // Deleting previous markers before adding the new list of markers\n    const tmpMarkers = [];\n    //const bounds = new window.google.maps.LatLngBounds();\n    locs.forEach(location => {\n      // debugger; // eslint-disable-line no-debugger\n      // console.log('=========== ~ file: Map.js ~ line 37 ~ location', location);\n      const marker = new window.google.maps.Marker({\n        position: new window.google.maps.LatLng(\n          parseFloat(location.coordinates.latitude),\n          parseFloat(location.coordinates.longitude)\n        ),\n        // title: location.station_name,\n      });\n      marker.setMap(mapInstance);\n\n      const infowindow = new window.google.maps.InfoWindow({\n        content: `<p>${location.address}</p>\n        <ul>\n          <li><strong>Conditions d'accés</strong>: ${location.condition_acces}</li>\n          <li><strong>Type d'emplacement</strong>: ${location.location_type}</li>\n          <li><strong>Phone</strong>: <a href=\"tel:${location.telephone_operateur}\">${location.telephone_operateur}</a></li>\n        </ul>`,\n        boxStyle: {\n          width: '300px',\n          height: '300px',\n        },\n      });\n\n      // bounds.extend(\n      //   new window.google.maps.LatLng(\n      //     parseFloat(latitude),\n      //     parseFloat(longitude)\n      //   )\n      // );\n\n      marker.addListener('click', () => {\n        infowindow.open({\n          anchor: marker,\n          map: mapInstance,\n          shouldFocus: true,\n        });\n      });\n\n      tmpMarkers.push(marker);\n    });\n\n    //mapInstance.fitBounds(bounds);\n  };\n  useEffect(() => {\n    const onLoad = () => {\n      try {\n        const options = {\n          lat: 45.891181, //45.891181\n          lng: 7, // 4.8223994\n        };\n        const _map = new window.google.maps.Map(ref.current, {\n          center: options,\n          zoom: 6,\n        });\n        setMap(_map);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      // return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, []);\n\n  useEffect(() => {\n    getCPOLocations(user.id);\n  }, []);\n\n  // Drop Markers\n  useEffect(() => {\n    if (locations.length && map) {\n      // .renderingType != 'UNINITIALIZED'\n      addMarkers(locations, map, addedMarkers => setMarkers(addedMarkers));\n    }\n    // console.log('locations from the server', locations);\n  }, [locations, map]);\n\n  // Map Filter\n  useEffect(() => {\n    let filterdLoc = locations;\n    if (map && locations) {\n      console.log(filters, 'filters useEffect');\n      if (filters.isGreenEnergy) {\n        filterdLoc = locations.filter(\n          loc => loc.is_green_energy == filters.isGreenEnergy\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isBookable) {\n        filterdLoc = locations.filter(\n          loc => loc.bookable == filters.isBookable\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isCbPayment) {\n        filterdLoc = locations.filter(\n          loc => loc.payment_by_card == filters.isCbPayment\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isFreeCharging) {\n        filterdLoc = locations.filter(\n          loc => loc.free_charging == filters.isFreeCharging\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isAvailable) {\n        filterdLoc = locations.filter(\n          loc => loc.payment_by_card == filters.isAvailable\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.supportsTwoWheel) {\n        filterdLoc = locations.filter(\n          loc => loc.two_wheel == filters.supportsTwoWheel\n        );\n        addMarkers(filterdLoc, map);\n      }\n\n      // if (!filters) {\n      //   addMarkers(filterdLoc, map);\n      // }\n    }\n    console.log('filterdLoc', filterdLoc);\n  }, [filters, locations]);\n\n  return (\n    <>\n      <div\n        style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n        ref={ref}\n      />\n    </>\n  );\n};\n\n// Map.defaultProps = mapOptions;\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n  user: state.auth.user,\n});\n\n// export default ;\nexport default connect(mapStateToProps, { getCPOLocations })(Map);\n// export default React.forwardRef((props, ref) => (\n//   <ConnectedMap {...props} forwaredRef={ref} />\n// ));\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/hooks/usePosition.js",["217"],"import { useState, useEffect } from 'react';\n\nconst defaultSettings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0,\n};\n\nexport const usePosition = (watch = false, settings = defaultSettings) => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({ coords, timestamp }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      speed: coords.speed,\n      timestamp,\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    let watcher = null;\n    if (watch) {\n      watcher = navigator.geolocation.watchPosition(\n        onChange,\n        onError,\n        settings\n      );\n    } else {\n      navigator.geolocation.getCurrentPosition(onChange, onError, settings);\n    }\n\n    return () => watcher && navigator.geolocation.clearWatch(watcher);\n  }, [settings.enableHighAccuracy, settings.timeout, settings.maximumAge]);\n\n  return { ...position, error };\n};\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/msp/Map.js",["218","219","220"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\nimport { usePosition } from '../../hooks/usePosition';\nimport { Alert, Button } from 'react-bootstrap';\n\nconst Map = ({ options, locations, getLocations, filters }) => {\n  // const  = props;\n\n  const [map, setMap] = useState();\n  const ref = useRef(null);\n  const { latitude, longitude } = usePosition();\n  const [markers, setMarkers] = useState([]);\n  const [mybounds, setmybounds] = useState({\n    lat: 45.891181, //45.891181\n    lng: 4.8223994, // 4.8223994\n  });\n\n  const removeMarkers = markersArray => {\n    markersArray?.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n  };\n  const addMarkers = (locs, mapInstance) => {\n    markers.forEach(marker => marker.setMap(null));\n    // Deleting previous markers before adding the new list of markers\n    const tmpMarkers = [];\n    const bounds = new window.google.maps.LatLngBounds();\n    locs.forEach(location => {\n      // debugger; // eslint-disable-line no-debugger\n      // console.log('=========== ~ file: Map.js ~ line 37 ~ location', location);\n      const marker = new window.google.maps.Marker({\n        position: new window.google.maps.LatLng(\n          parseFloat(location.coordinates.latitude),\n          parseFloat(location.coordinates.longitude)\n        ),\n        // title: location.station_name,\n      });\n      marker.setMap(mapInstance);\n\n      const infowindow = new window.google.maps.InfoWindow({\n        content: `<p>${location.address}</p>\n        <ul>\n          <li><strong>Conditions d'accés</strong>: ${location.condition_acces}</li>\n          <li><strong>Type d'emplacement</strong>: ${location.location_type}</li>\n          <li><strong>Phone</strong>: <a href=\"tel:${location.telephone_operateur}\">${location.telephone_operateur}</a></li>\n        </ul>`,\n        boxStyle: {\n          width: '300px',\n          height: '300px',\n        },\n      });\n      latitude && longitude\n        ? bounds.extend(\n            new window.google.maps.LatLng(\n              parseFloat(latitude),\n              parseFloat(longitude)\n            )\n          )\n        : bounds.extend(\n            new window.google.maps.LatLng(\n              parseFloat(location.coordinates.latitude),\n              parseFloat(location.coordinates.longitude)\n            )\n          );\n\n      marker.addListener('click', () => {\n        infowindow.open({\n          anchor: marker,\n          map: mapInstance,\n          shouldFocus: true,\n        });\n      });\n\n      tmpMarkers.push(marker);\n    });\n\n    mapInstance.fitBounds(bounds);\n  };\n  useEffect(() => {\n    const onLoad = () => {\n      try {\n        const options = {\n          lat: 45.891181, //45.891181\n          lng: 7, // 4.8223994\n        };\n        const _map = new window.google.maps.Map(ref.current, {\n          center: options,\n          zoom: 6,\n        });\n        setMap(_map);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      // return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, []);\n\n  useEffect(() => {\n    getLocations();\n  }, []);\n\n  // Drop Markers\n  useEffect(() => {\n    if (locations.length && map) {\n      // .renderingType != 'UNINITIALIZED'\n      addMarkers(locations, map, addedMarkers => setMarkers(addedMarkers));\n    }\n    // console.log('locations from the server', locations);\n  }, [locations, map]);\n\n  // Map Filter\n  useEffect(() => {\n    let filterdLoc = locations;\n    if (map && locations) {\n      console.log(filters, 'filters useEffect');\n      if (filters.isGreenEnergy) {\n        filterdLoc = locations.filter(\n          loc => loc.is_green_energy === filters.isGreenEnergy\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isBookable) {\n        filterdLoc = locations.filter(\n          loc => loc.bookable === filters.isBookable\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isCbPayment) {\n        filterdLoc = locations.filter(\n          loc => loc.payment_by_card === filters.isCbPayment\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isFreeCharging) {\n        filterdLoc = locations.filter(\n          loc => loc.free_charging === filters.isFreeCharging\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.isAvailable) {\n        filterdLoc = locations.filter(\n          loc => loc.status === filters.isAvailable\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.supportsTwoWheel) {\n        filterdLoc = locations.filter(\n          loc => loc.two_wheel === filters.supportsTwoWheel\n        );\n        addMarkers(filterdLoc, map);\n      }\n      if (filters.nominal_power) {\n        filterdLoc = locations.filter(\n          loc => loc.nominal_power === filters.nominal_power\n        );\n        addMarkers(filterdLoc, map);\n      }\n      // if (filters.status) {\n      //   filterdLoc = locations.filter(loc => loc.status === filters.status);\n      //   addMarkers(filterdLoc, map);\n      // }\n\n      // if (!filters) {\n      //   addMarkers(filterdLoc, map);\n      // }\n    }\n    console.log('filterdLoc', filterdLoc);\n  }, [filters]);\n\n  return (\n    <>\n      <div\n        style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n        ref={ref}\n      />\n    </>\n  );\n};\n\n// Map.defaultProps = mapOptions;\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n});\n\n// export default ;\nexport default connect(mapStateToProps, { getLocations })(Map);\n// export default React.forwardRef((props, ref) => (\n//   <ConnectedMap {...props} forwaredRef={ref} />\n// ));\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/roles.js",[],{"ruleId":"221","severity":1,"message":"222","line":65,"column":6,"nodeType":"223","endLine":65,"endColumn":8,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":54,"column":6,"nodeType":"223","endLine":54,"endColumn":20,"suggestions":"226"},{"ruleId":"221","severity":1,"message":"227","line":88,"column":6,"nodeType":"223","endLine":88,"endColumn":22,"suggestions":"228"},{"ruleId":"221","severity":1,"message":"229","line":103,"column":6,"nodeType":"223","endLine":103,"endColumn":8,"suggestions":"230"},{"ruleId":"221","severity":1,"message":"227","line":112,"column":6,"nodeType":"223","endLine":112,"endColumn":22,"suggestions":"231"},{"ruleId":"221","severity":1,"message":"232","line":161,"column":6,"nodeType":"223","endLine":161,"endColumn":26,"suggestions":"233"},{"ruleId":"221","severity":1,"message":"234","line":45,"column":6,"nodeType":"223","endLine":45,"endColumn":74,"suggestions":"235"},{"ruleId":"221","severity":1,"message":"236","line":109,"column":6,"nodeType":"223","endLine":109,"endColumn":8,"suggestions":"237"},{"ruleId":"221","severity":1,"message":"227","line":118,"column":6,"nodeType":"223","endLine":118,"endColumn":22,"suggestions":"238"},{"ruleId":"221","severity":1,"message":"239","line":177,"column":6,"nodeType":"223","endLine":177,"endColumn":15,"suggestions":"240"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCPOLocations' and 'user.id'. Either include them or remove the dependency array. If 'getCPOLocations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["241"],"React Hook useEffect has missing dependencies: 'user' and 'vehicules'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'addMarkers'. Either include it or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["244"],["245"],"React Hook useEffect has missing dependencies: 'addMarkers' and 'map'. Either include them or remove the dependency array.",["246"],"React Hook useEffect has missing dependencies: 'settings' and 'watch'. Either include them or remove the dependency array.",["247"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array. If 'getLocations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["248"],["249"],"React Hook useEffect has missing dependencies: 'addMarkers', 'locations', and 'map'. Either include them or remove the dependency array.",["250"],{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"255","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"255","fix":"266"},{"desc":"260","fix":"267"},"Update the dependencies array to be: [getCPOLocations, user.id]",{"range":"268","text":"269"},"Update the dependencies array to be: [getVehicules, user, vehicules]",{"range":"270","text":"271"},"Update the dependencies array to be: [addMarkers, locations, map]",{"range":"272","text":"273"},"Update the dependencies array to be: [user.id]",{"range":"274","text":"275"},{"range":"276","text":"273"},"Update the dependencies array to be: [addMarkers, filters, locations, map]",{"range":"277","text":"278"},"Update the dependencies array to be: [settings.enableHighAccuracy, settings.timeout, settings.maximumAge, watch, settings]",{"range":"279","text":"280"},"Update the dependencies array to be: [getLocations]",{"range":"281","text":"282"},{"range":"283","text":"273"},{"range":"284","text":"278"},[1674,1676],"[getCPOLocations, user.id]",[1483,1497],"[getVehicules, user, vehicules]",[2577,2593],"[addMarkers, locations, map]",[3250,3252],"[user.id]",[3519,3535],[4946,4966],"[addMarkers, filters, locations, map]",[1066,1134],"[settings.enableHighAccuracy, settings.timeout, settings.maximumAge, watch, settings]",[3488,3490],"[getLocations]",[3757,3773],[5534,5543]]