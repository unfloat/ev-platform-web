[{"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/index.js":"1","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/App.js":"2","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/serviceWorker.js":"3","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/store.js":"4","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Admin.js":"5","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/PrivateRoute.js":"6","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Login.js":"7","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Register.js":"8","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/index.js":"9","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/routes.js":"10","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/authActions.js":"11","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/FixedPlugin/FixedPlugin.js":"12","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Sidebar/Sidebar.js":"13","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/Footer.js":"14","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/AdminNavbar.js":"15","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/errorReducer.js":"16","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/locationReducer.js":"17","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/evseReducer.js":"18","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/authReducer.js":"19","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/api.js":"20","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/types.js":"21","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/TableList.js":"22","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Maps.js":"23","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/validation/is-empty.js":"24","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Dashboard.js":"25","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/locationAction.js":"26","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Guest.js":"27","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/GuestFooter.js":"28","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/GuestNavbar.js":"29","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Vehicule.js":"30","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/vehiculeReducer.js":"31","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/vehiculeActions.js":"32","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/UserProfile.js":"33","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Typography.js":"34","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Upgrade.js":"35","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/connectorAction.js":"36","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/connectorReducer.js":"37","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/constants.js":"38","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorTypes.js":"39","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/greenEnergyTypes.js":"40","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorFormat.js":"41","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/cpo/Bornes.js":"42","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/MapsGuest.js":"43","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Borne.js":"44","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/bookable.js":"45","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/payment.js":"46","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/guest/MapGuest.js":"47","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/cpo/Map.js":"48","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/powerTypes.js":"49","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/msp/Map.js":"50","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/hooks/usePosition.js":"51","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectionType.js":"52"},{"size":429,"mtime":1627903730728,"results":"53","hashOfConfig":"54"},{"size":1842,"mtime":1632162992840,"results":"55","hashOfConfig":"54"},{"size":4812,"mtime":1627905833084,"results":"56","hashOfConfig":"54"},{"size":449,"mtime":1627905833092,"results":"57","hashOfConfig":"54"},{"size":3007,"mtime":1632162993248,"results":"58","hashOfConfig":"54"},{"size":804,"mtime":1630318329664,"results":"59","hashOfConfig":"54"},{"size":4481,"mtime":1632162993272,"results":"60","hashOfConfig":"54"},{"size":5140,"mtime":1632162993304,"results":"61","hashOfConfig":"54"},{"size":508,"mtime":1629812307780,"results":"62","hashOfConfig":"54"},{"size":2807,"mtime":1632266196945,"results":"63","hashOfConfig":"54"},{"size":2158,"mtime":1632162976676,"results":"64","hashOfConfig":"54"},{"size":7355,"mtime":1627905832896,"results":"65","hashOfConfig":"54"},{"size":2808,"mtime":1632162993044,"results":"66","hashOfConfig":"54"},{"size":1876,"mtime":1629211208060,"results":"67","hashOfConfig":"54"},{"size":5329,"mtime":1629212401124,"results":"68","hashOfConfig":"54"},{"size":299,"mtime":1627903730752,"results":"69","hashOfConfig":"54"},{"size":469,"mtime":1627903730764,"results":"70","hashOfConfig":"54"},{"size":451,"mtime":1627903730756,"results":"71","hashOfConfig":"54"},{"size":627,"mtime":1630939507925,"results":"72","hashOfConfig":"54"},{"size":120,"mtime":1630450965822,"results":"73","hashOfConfig":"54"},{"size":721,"mtime":1632266196945,"results":"74","hashOfConfig":"54"},{"size":2909,"mtime":1629020060692,"results":"75","hashOfConfig":"54"},{"size":9000,"mtime":1632265682041,"results":"76","hashOfConfig":"54"},{"size":223,"mtime":1627905833140,"results":"77","hashOfConfig":"54"},{"size":21242,"mtime":1632162993256,"results":"78","hashOfConfig":"54"},{"size":1903,"mtime":1632266196945,"results":"79","hashOfConfig":"54"},{"size":2429,"mtime":1632162993248,"results":"80","hashOfConfig":"54"},{"size":1876,"mtime":1629211285360,"results":"81","hashOfConfig":"54"},{"size":4429,"mtime":1632162992972,"results":"82","hashOfConfig":"54"},{"size":9430,"mtime":1632162993324,"results":"83","hashOfConfig":"54"},{"size":469,"mtime":1629113814668,"results":"84","hashOfConfig":"54"},{"size":1238,"mtime":1632162992932,"results":"85","hashOfConfig":"54"},{"size":8085,"mtime":1632163182580,"results":"86","hashOfConfig":"54"},{"size":5574,"mtime":1629283963904,"results":"87","hashOfConfig":"54"},{"size":3857,"mtime":1629283462184,"results":"88","hashOfConfig":"54"},{"size":816,"mtime":1629755435332,"results":"89","hashOfConfig":"54"},{"size":475,"mtime":1629799929558,"results":"90","hashOfConfig":"54"},{"size":395,"mtime":1629892090995,"results":"91","hashOfConfig":"54"},{"size":2767,"mtime":1632162993184,"results":"92","hashOfConfig":"54"},{"size":218,"mtime":1632162993184,"results":"93","hashOfConfig":"54"},{"size":358,"mtime":1632162993128,"results":"94","hashOfConfig":"54"},{"size":294,"mtime":1632162993324,"results":"95","hashOfConfig":"54"},{"size":604,"mtime":1632162993272,"results":"96","hashOfConfig":"54"},{"size":17285,"mtime":1632266196945,"results":"97","hashOfConfig":"54"},{"size":198,"mtime":1632162993044,"results":"98","hashOfConfig":"54"},{"size":231,"mtime":1632162993184,"results":"99","hashOfConfig":"54"},{"size":3240,"mtime":1632162993360,"results":"100","hashOfConfig":"54"},{"size":2782,"mtime":1632163269528,"results":"101","hashOfConfig":"54"},{"size":204,"mtime":1632162993184,"results":"102","hashOfConfig":"54"},{"size":3838,"mtime":1632162993044,"results":"103","hashOfConfig":"54"},{"size":1174,"mtime":1632162993248,"results":"104","hashOfConfig":"54"},{"size":358,"mtime":1632266196945,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1b58p4j",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/index.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/App.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/serviceWorker.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/store.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Admin.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/PrivateRoute.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Login.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Register.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/index.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/routes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/authActions.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/FixedPlugin/FixedPlugin.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Sidebar/Sidebar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/Footer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/AdminNavbar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/errorReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/locationReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/evseReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/authReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/api.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/types.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/TableList.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Maps.js",["218"],"import React, { useRef, useState, useEffect } from 'react';\n// UI components\nimport Map from '../components/msp/Map';\nimport {\n  ToggleButton,\n  Card,\n  Form,\n  ButtonGroup,\n  Container,\n  Row,\n  Col,\n  Button,\n} from 'react-bootstrap';\n\nimport { Form, Card, Container, Row, Col, Button } from 'react-bootstrap';\nimport Map from './../components/Map';\n// constants\nimport greenEnergyTypeOptions from './../constants/greenEnergyTypes';\nimport bookableOptions from './../constants/bookable';\nimport paymentOptions from './../constants/payment';\n\nfunction Maps() {\n  const [filters, setFilters] = useState({});\n  const [map, setMap] = useState(null);\n  const ref = React.createRef();\n\n  useEffect(() => {\n    const onLoad = () => {\n      try {\n        const options = {\n          lat: 45.891181,\n          lng: 4.8223994,\n        };\n        // if (latitude && longitude) {\n        //   options.lat = latitude;\n        //   options.lng = longitude;\n        //   options.zoom = 7;\n        // }\n        const map = new window.google.maps.Map(ref.current, {\n          center: options,\n          zoom: 15,\n        });\n\n        if (map) {\n          setMap(map);\n          console.log('map==========', map);\n          // getLocations();\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  });\n  const mapRef = useRef(null);\n  const [filterName, setFilterName] = useState('');\n  const [filters, setFilters] = useState({});\n  const [selectedStation, setSelectedStation] = useState(null);\n\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <Card.Title as='h4'>Filtrer les stations par:</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Card.Subtitle>Geolocation</Card.Subtitle>\n                <Form>\n                  <Row>\n                    <Col md='6'>\n                      {/* <Form.Group\n                        className='mb-3'\n                        controlId='formBasicCheckbox'\n                      >\n                        <Form.Check type='checkbox' label='Check me out' />\n                      </Form.Group> */}\n\n                      {/* <Form>\n                        <Form.Check\n                          type='switch'\n                          id='custom-switch'\n                          label='Check this switch'\n                        />\n                        <Form.Check\n                          disabled\n                          type='switch'\n                          label='disabled switch'\n                          id='disabled-custom-switch'\n                        />\n                      </Form>\n                      <Form.Switch /> */}\n\n                      <ButtonGroup>\n                        {greenEnergyTypeOptions.map(option => (\n                          <ToggleButton\n                            key={option.id}\n                            id={`option-${option.id}`}\n                            type='radio'\n                            name='greenEnergy'\n                            value={option.value}\n                            onChange={e =>\n                              setFilters(prevState => ({\n                                ...prevState,\n                                greenEnergy: e.target.value,\n                              }))\n                            }\n                          >\n                            {option.label}\n                          </ToggleButton>\n                        ))}\n                      </ButtonGroup>\n                    </Col>\n                    <Col md='6'>\n                      <ButtonGroup>\n                        {bookableOptions.map(option => (\n                          <ToggleButton\n                            key={option.id}\n                            id={`option-${option.id}`}\n                            type='radio'\n                            name='bookable'\n                            value={option.value}\n                            onChange={e =>\n                              setFilters(prevState => ({\n                                ...prevState,\n                                bookable: e.target.value,\n                              }))\n                            }\n                          >\n                            {option.label}\n                          </ToggleButton>\n                        ))}\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    {' '}\n                    <Col md='6'>\n                      <ButtonGroup>\n                        {paymentOptions.map(option => (\n                          <ToggleButton\n                            key={option.id}\n                            id={`option-${option.id}`}\n                            type='radio'\n                            name='payment_by_card'\n                            value={option.value}\n                            onChange={e =>\n                              setFilters(prevState => ({\n                                ...prevState,\n                                payment_by_card: e.target.value,\n                              }))\n                            }\n                          >\n                            {option.label}\n                          </ToggleButton>\n                        ))}\n                      </ButtonGroup>\n                    </Col>\n                    {/* <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        // onChange={e => setFilterName(e.target.value)}\n                        onChange={e =>\n                          setFilters(prevState => ({\n                            ...prevState,\n                            energy: e.target.value,\n                          }))\n                        }\n                      >\n                        <option defaultValue=''>Type d'Energie</option>\n                        {greenEnergyTypeOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control> \n                    </Col>\n                    <Col md='6'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        // onChange={e => setFilterName(e.target.value)}\n                        onChange={e =>\n                          setFilters(prevState => ({\n                            ...prevState,\n                            bookable: e.target.value,\n                          }))\n                        }\n                      >\n                        <option defaultValue=''>Réservation</option>\n                        {bookableOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='6'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        // onChange={e => setFilterName(e.target.value)}\n                        onChange={e =>\n                          setFilters(prevState => ({\n                            ...prevState,\n                            payment_by_card: e.target.value,\n                          }))\n                        }\n                      >\n                        <option defaultValue=''>Paiement CB</option>\n                        {payment.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    */}\n                  </Row>\n                  <Button color='primary' onClick={() => setFilters({})}>\n                    Réinitialiser\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      {/* <div ref={ref} style={{ height: '300px', width: '500px' }} /> */}\n      <Map filters={filters} map={map} ref={ref} />\n    </>\n  );\n}\n\nexport default Maps;\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/validation/is-empty.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Dashboard.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/locationAction.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Guest.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/GuestFooter.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/GuestNavbar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Vehicule.js",["219"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addVehicule } from '../actions/vehiculeActions';\nimport { getVehicules } from '../actions/vehiculeActions';\n\nimport connectorTypeOptions from './../constants/connectorTypes';\nimport connectorFormatOptions from './../constants/connectorFormat';\nimport connectorPowerTypesOptions from './../constants/powerTypes';\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  Table,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from 'react-bootstrap';\n\nfunction Vehicule({ vehicules, loading, addVehicule, user, getVehicules }) {\n  const initalValues = {\n    id: '',\n    brand: '',\n    model: '',\n    standard: '',\n    format: '',\n    power_type: '',\n    max_voltage: '',\n    max_amperage: '',\n  };\n  const [vehiculeProperties, setvehiculeProperties] = useState(initalValues);\n\n  const handleInputChange = (value, fieldName) => {\n    setvehiculeProperties(prevState => ({ ...prevState, [fieldName]: value }));\n  };\n\n  const add = _user => {\n    if (vehiculeProperties.brand !== '' && vehiculeProperties.model !== '') {\n      addVehicule({ ...vehiculeProperties, id: _user._id });\n      console.log(_user);\n      setvehiculeProperties(initalValues);\n      getVehicules();\n    } else return;\n  };\n  useEffect(() => {\n    getVehicules();\n    console.log('useeffect', vehicules);\n  }, [getVehicules]);\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <Card.Title as='h4'>Ajouter un Véhicule Electrique</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form>\n                  <Row>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Marque</label>\n                        <Form.Control\n                          placeholder='Marque'\n                          type='text'\n                          name='brand'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='6'>\n                      <Form.Group>\n                        <label>Modèle</label>\n                        <Form.Control\n                          placeholder='Modèle'\n                          type='text'\n                          name='model'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='4'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        name='standard'\n                        onChange={e =>\n                          handleInputChange(e.target.value, e.target.name)\n                        }\n                      >\n                        <option defaultValue=''>Type de connecteur</option>\n                        {connectorTypeOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.value}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        name='format'\n                        onChange={e =>\n                          handleInputChange(e.target.value, e.target.name)\n                        }\n                      >\n                        <option defaultValue=''>Format connecteur</option>\n                        {connectorFormatOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.value}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n\n                    <Col md='4'>\n                      <Form.Control\n                        aria-label='Connector select'\n                        as='select'\n                        custom\n                        name='format'\n                        onChange={e =>\n                          handleInputChange(e.target.value, e.target.name)\n                        }\n                      >\n                        <option defaultValue=''>Type de Puissance</option>\n                        {connectorPowerTypesOptions.map((option, idx) => (\n                          <option key={idx} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Type de puissance</label>\n                        <Form.Control\n                          placeholder='Puissance'\n                          type='text'\n                          name='power_type'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Voltage Maximum</label>\n                        <Form.Control\n                          placeholder='Voltage'\n                          type='text'\n                          name='max_voltage'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md='4'>\n                      <Form.Group>\n                        <label>Ampérage Maximum</label>\n                        <Form.Control\n                          placeholder='Ampérage'\n                          type='text'\n                          name='max_amperage'\n                          onChange={e =>\n                            handleInputChange(e.target.value, e.target.name)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Button\n          className='btn-fill pull-right'\n          type='submit'\n          onClick={() => add(user)}\n        >\n          Ajouter\n        </Button>\n      </Container>{' '}\n      <br />\n      {loading ? (\n        <div> Chargement ...</div>\n      ) : (\n        <Container fluid>\n          <Row>\n            <Col md='12'>\n              <Card className='strpied-tabled-with-hover'>\n                <Card.Header>\n                  <Card.Title as='h4'>Mes EVs</Card.Title>\n                  <p className='card-category'>EVs enregistrés</p>\n                </Card.Header>\n                <Card.Body className='table-full-width table-responsive px-0'>\n                  <Table className='table-hover table-striped'>\n                    <thead>\n                      <tr>\n                        <th className='border-0'>Marque</th>\n                        <th className='border-0'>Modèle</th>\n                        <th className='border-0'>Format Connecteur</th>\n                        <th className='border-0'>Standard</th>\n                        <th className='border-0'>Voltage Maximum</th>\n                        <th className='border-0'>Type de Puissance</th>\n                        <th className='border-0'>Ampérage Maximum</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {vehicules?.length ? (\n                        vehicules?.map(vehicule => {\n                          return (\n                            <tr>\n                              <td>{vehicule.brand}</td>\n                              <td>{vehicule.model}</td>\n                              <td>{vehicule.format}</td>\n                              <td>{vehicule.standard}</td>\n                              <td>{vehicule.max_voltage}</td>\n                              <td>{vehicule.power_type}</td>\n                              <td>{vehicule.max_amperage}</td>{' '}\n                            </tr>\n                          );\n                        })\n                      ) : (\n                        <p>{''}</p>\n                      )}\n                    </tbody>\n                  </Table>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  vehicules: state.vehicule.vehicules,\n  loading: state.vehicule.loading,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { getVehicules, addVehicule })(\n  Vehicule\n);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/vehiculeReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/vehiculeActions.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/UserProfile.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Typography.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Upgrade.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/connectorAction.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/connectorReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/constants.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/greenEnergyTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorFormat.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/cpo/Bornes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/MapsGuest.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Borne.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/bookable.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/payment.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/guest/MapGuest.js",["220"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\n\nfunction MapGuest({ options, className, locations, getLocations, filters }) {\n  const ref = useRef();\n  const [map, setMap] = useState(null);\n  // const { latitude, longitude } = usePosition();\n  const [markers, setMarkers] = useState();\n\n  const addMarkers = (locations, mapInstance) => {\n    // Deleting previous markers before adding the new list of markers\n    if (markers) {\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      setMarkers([]);\n    }\n    let tmp = [];\n    locations.forEach(location => {\n      const marker = new window.google.maps.Marker({\n        mapInstance,\n        position: new window.google.maps.LatLng(\n          location.coordinates.latitude,\n          location.coordinates.longitude\n        ),\n        title: location.station_name,\n      });\n      marker.setMap(mapInstance);\n      const infowindow = new window.google.maps.InfoWindow({\n        content: location.station_name,\n        boxStyle: {\n          width: '300px',\n          height: '300px',\n        },\n      });\n      marker.addListener(`mouseover`, () => {\n        infowindow.open(mapInstance, marker);\n      });\n      marker.addListener(`mouseout`, () => {\n        infowindow.close(mapInstance, marker);\n      });\n\n      tmp.push(marker);\n    });\n    setMarkers(tmp);\n  };\n  useEffect(() => {\n    const onLoad = () => {\n      const options = {\n        lat: 45.891181,\n        lng: 4.8223994,\n        zoom: 12,\n      };\n      // if (latitude && longitude) {\n      //   options.lat = latitude;\n      //   options.lng = longitude;\n      //   options.zoom = 7;\n      // }\n      const map = new window.google.maps.Map(ref.current, {\n        center: options,\n        zoom: 15,\n      });\n\n      if (map) {\n        console.log('map', map);\n        setMap(map);\n        getLocations();\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, [options, getLocations]);\n\n  useEffect(() => {\n    if (locations.length && map) {\n      addMarkers(locations, map);\n    }\n    console.log('locations from the server', locations);\n  }, [locations, map]);\n\n  useEffect(() => {\n    if (map) {\n      //   map.MapMouseEvent(`onclick`, () => {\n      //     console.log('click on map');\n      //   });\n\n      console.log('aha');\n    }\n  }, [map]);\n\n  // if (map && typeof onMount === `function`) onMount(map, onMountProps);\n\n  return (\n    <div\n      style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n      {...{ ref, className }}\n    />\n  );\n}\n\n// Map.defaultProps = mapOptions;\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n});\n\nexport default connect(mapStateToProps, { getLocations })(MapGuest);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/cpo/Map.js",["221"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getCPOLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\n\nfunction Map({\n  options,\n  onMount,\n  className,\n  onMountProps,\n  locations,\n  getCPOLocations,\n  getLocations,\n  filterName,\n  filters,\n  selectedStation,\n}) {\n  const ref = useRef();\n  const [map, setMap] = useState();\n  const [markers, setMarkers] = useState();\n\n  const addBornes = (locations, mapInstance, stations) => {\n    // Deleting previous markers before adding the new list of markers\n    if (markers) {\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      setMarkers([]);\n    }\n    let tmp = [];\n    locations.forEach(location => {\n      const marker = new window.google.maps.Marker({\n        mapInstance,\n        position: new window.google.maps.LatLng(\n          location.coordinates.latitude,\n          location.coordinates.longitude\n        ),\n        title: location.station_name,\n      });\n      marker.setMap(mapInstance);\n      const infowindow = new window.google.maps.InfoWindow({\n        content: location.station_name,\n        boxStyle: {\n          width: '300px',\n          height: '300px',\n        },\n      });\n      marker.addListener(`mouseover`, () => {\n        infowindow.open(mapInstance, marker);\n      });\n      marker.addListener(`mouseout`, () => {\n        infowindow.close(mapInstance, marker);\n      });\n\n      tmp.push(marker);\n    });\n    setMarkers(tmp);\n  };\n\n  useEffect(() => {\n    const onLoad = () => {\n      const options = {\n        lat: 47.179,\n        lng: 8.518,\n        zoom: 10,\n      };\n\n      const map = new window.google.maps.Map(ref.current, {\n        center: options,\n        zoom: 15,\n      });\n\n      if (map) {\n        setMap(map);\n        //getCPOLocations();\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, [options, getCPOLocations]);\n\n  useEffect(() => {\n    if (map) {\n      addBornes(locations, map);\n    }\n    console.log('locations from the server', locations);\n  }, [locations, map]);\n\n  return (\n    <div\n      style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n      {...{ ref, className }}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n});\n\nexport default connect(mapStateToProps, { getCPOLocations })(Map);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/powerTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/msp/Map.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/hooks/usePosition.js",["222"],"import { useState, useEffect } from 'react';\n\nconst defaultSettings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0,\n};\n\nexport const usePosition = (watch = false, settings = defaultSettings) => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({ coords, timestamp }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      speed: coords.speed,\n      timestamp,\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    let watcher = null;\n    if (watch) {\n      watcher = navigator.geolocation.watchPosition(\n        onChange,\n        onError,\n        settings\n      );\n    } else {\n      navigator.geolocation.getCurrentPosition(onChange, onError, settings);\n    }\n\n    return () => watcher && navigator.geolocation.clearWatch(watcher);\n  }, [settings.enableHighAccuracy, settings.timeout, settings.maximumAge]);\n\n  return { ...position, error };\n};\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectionType.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"223","line":15,"column":10},{"ruleId":"224","severity":1,"message":"225","line":51,"column":6,"nodeType":"226","endLine":51,"endColumn":20,"suggestions":"227"},{"ruleId":"224","severity":1,"message":"228","line":88,"column":6,"nodeType":"226","endLine":88,"endColumn":22,"suggestions":"229"},{"ruleId":"224","severity":1,"message":"230","line":94,"column":6,"nodeType":"226","endLine":94,"endColumn":22,"suggestions":"231"},{"ruleId":"224","severity":1,"message":"232","line":45,"column":6,"nodeType":"226","endLine":45,"endColumn":74,"suggestions":"233"},"Parsing error: Identifier 'Form' has already been declared.\n\n\u001b[0m \u001b[90m 13 |\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'react-bootstrap'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mForm\u001b[39m\u001b[33m,\u001b[39m \u001b[33mCard\u001b[39m\u001b[33m,\u001b[39m \u001b[33mContainer\u001b[39m\u001b[33m,\u001b[39m \u001b[33mRow\u001b[39m\u001b[33m,\u001b[39m \u001b[33mCol\u001b[39m\u001b[33m,\u001b[39m \u001b[33mButton\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'react-bootstrap'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mMap\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m'./../components/Map'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 |\u001b[39m \u001b[90m// constants\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 |\u001b[39m \u001b[36mimport\u001b[39m greenEnergyTypeOptions \u001b[36mfrom\u001b[39m \u001b[32m'./../constants/greenEnergyTypes'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'vehicules'. Either include it or remove the dependency array.","ArrayExpression",["234"],"React Hook useEffect has a missing dependency: 'addMarkers'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has a missing dependency: 'addBornes'. Either include it or remove the dependency array.",["236"],"React Hook useEffect has missing dependencies: 'settings' and 'watch'. Either include them or remove the dependency array.",["237"],{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [getVehicules, vehicules]",{"range":"246","text":"247"},"Update the dependencies array to be: [addMarkers, locations, map]",{"range":"248","text":"249"},"Update the dependencies array to be: [addBornes, locations, map]",{"range":"250","text":"251"},"Update the dependencies array to be: [settings.enableHighAccuracy, settings.timeout, settings.maximumAge, watch, settings]",{"range":"252","text":"253"},[1393,1407],"[getVehicules, vehicules]",[2577,2593],"[addMarkers, locations, map]",[2418,2434],"[addBornes, locations, map]",[1066,1134],"[settings.enableHighAccuracy, settings.timeout, settings.maximumAge, watch, settings]"]