[{"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/index.js":"1","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/App.js":"2","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/serviceWorker.js":"3","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/store.js":"4","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/PrivateRoute.js":"5","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Guest.js":"6","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Admin.js":"7","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/index.js":"8","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/routes.js":"9","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/errorReducer.js":"10","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/evseReducer.js":"11","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/authReducer.js":"12","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/locationReducer.js":"13","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/connectorReducer.js":"14","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/vehiculeReducer.js":"15","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/Footer.js":"16","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/GuestFooter.js":"17","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Sidebar/Sidebar.js":"18","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/AdminNavbar.js":"19","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/GuestNavbar.js":"20","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/types.js":"21","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/validation/is-empty.js":"22","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/MapsGuest.js":"23","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/authActions.js":"24","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/TableList.js":"25","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/cpo/Bornes.js":"26","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Login.js":"27","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Upgrade.js":"28","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Register.js":"29","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Typography.js":"30","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/UserProfile.js":"31","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Maps.js":"32","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Borne.js":"33","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Vehicule.js":"34","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Dashboard.js":"35","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/api.js":"36","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/greenEnergyTypes.js":"37","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/bookable.js":"38","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/payment.js":"39","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/guest/MapGuest.js":"40","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/locationAction.js":"41","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectionType.js":"42","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/vehiculeActions.js":"43","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorFormat.js":"44","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/powerTypes.js":"45","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/cpo/Map.js":"46","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/hooks/usePosition.js":"47","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorTypes.js":"48","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/msp/Map.js":"49","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/roles.js":"50"},{"size":429,"mtime":1632485356381,"results":"51","hashOfConfig":"52"},{"size":1842,"mtime":1632162992840,"results":"53","hashOfConfig":"52"},{"size":4812,"mtime":1627905833084,"results":"54","hashOfConfig":"52"},{"size":449,"mtime":1627905833092,"results":"55","hashOfConfig":"52"},{"size":804,"mtime":1630318329664,"results":"56","hashOfConfig":"52"},{"size":2429,"mtime":1632162993248,"results":"57","hashOfConfig":"52"},{"size":3007,"mtime":1632162993248,"results":"58","hashOfConfig":"52"},{"size":508,"mtime":1629812307780,"results":"59","hashOfConfig":"52"},{"size":3161,"mtime":1636035955234,"results":"60","hashOfConfig":"52"},{"size":299,"mtime":1627903730752,"results":"61","hashOfConfig":"52"},{"size":451,"mtime":1627903730756,"results":"62","hashOfConfig":"52"},{"size":625,"mtime":1632469582933,"results":"63","hashOfConfig":"52"},{"size":643,"mtime":1635721615428,"results":"64","hashOfConfig":"52"},{"size":475,"mtime":1629799929558,"results":"65","hashOfConfig":"52"},{"size":623,"mtime":1633608116874,"results":"66","hashOfConfig":"52"},{"size":1827,"mtime":1632355332300,"results":"67","hashOfConfig":"52"},{"size":1827,"mtime":1632355324916,"results":"68","hashOfConfig":"52"},{"size":2801,"mtime":1632369358994,"results":"69","hashOfConfig":"52"},{"size":5341,"mtime":1632355060488,"results":"70","hashOfConfig":"52"},{"size":4430,"mtime":1632316305086,"results":"71","hashOfConfig":"52"},{"size":773,"mtime":1633608041226,"results":"72","hashOfConfig":"52"},{"size":223,"mtime":1627905833140,"results":"73","hashOfConfig":"52"},{"size":1003,"mtime":1632365552346,"results":"74","hashOfConfig":"52"},{"size":2168,"mtime":1635679016048,"results":"75","hashOfConfig":"52"},{"size":2647,"mtime":1636030995081,"results":"76","hashOfConfig":"52"},{"size":294,"mtime":1632162993324,"results":"77","hashOfConfig":"52"},{"size":3842,"mtime":1632366132934,"results":"78","hashOfConfig":"52"},{"size":3857,"mtime":1629283462184,"results":"79","hashOfConfig":"52"},{"size":7086,"mtime":1632477646741,"results":"80","hashOfConfig":"52"},{"size":5574,"mtime":1629283963904,"results":"81","hashOfConfig":"52"},{"size":8776,"mtime":1635935536663,"results":"82","hashOfConfig":"52"},{"size":8992,"mtime":1636033811306,"results":"83","hashOfConfig":"52"},{"size":18806,"mtime":1636045681988,"results":"84","hashOfConfig":"52"},{"size":14148,"mtime":1636038052154,"results":"85","hashOfConfig":"52"},{"size":21242,"mtime":1632162993256,"results":"86","hashOfConfig":"52"},{"size":120,"mtime":1630450965822,"results":"87","hashOfConfig":"52"},{"size":218,"mtime":1632162993184,"results":"88","hashOfConfig":"52"},{"size":198,"mtime":1632162993044,"results":"89","hashOfConfig":"52"},{"size":231,"mtime":1632162993184,"results":"90","hashOfConfig":"52"},{"size":3365,"mtime":1635672483763,"results":"91","hashOfConfig":"52"},{"size":4814,"mtime":1636151977973,"results":"92","hashOfConfig":"52"},{"size":358,"mtime":1632266196945,"results":"93","hashOfConfig":"52"},{"size":2750,"mtime":1635723312752,"results":"94","hashOfConfig":"52"},{"size":358,"mtime":1632162993128,"results":"95","hashOfConfig":"52"},{"size":204,"mtime":1632162993184,"results":"96","hashOfConfig":"52"},{"size":5741,"mtime":1636038090078,"results":"97","hashOfConfig":"52"},{"size":1174,"mtime":1632162993248,"results":"98","hashOfConfig":"52"},{"size":2668,"mtime":1634676652803,"results":"99","hashOfConfig":"52"},{"size":10855,"mtime":1636152728993,"results":"100","hashOfConfig":"52"},{"size":287,"mtime":1632361916800,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"27hg76",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/index.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/App.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/serviceWorker.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/store.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/PrivateRoute.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Guest.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/layouts/Admin.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/index.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/routes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/errorReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/evseReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/authReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/locationReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/connectorReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/reducers/vehiculeReducer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/Footer.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Footer/GuestFooter.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Sidebar/Sidebar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/AdminNavbar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/Navbars/GuestNavbar.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/types.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/validation/is-empty.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/MapsGuest.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/authActions.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/TableList.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/cpo/Bornes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Login.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Upgrade.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Register.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Typography.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/UserProfile.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Maps.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Borne.js",["210"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  addLocation,\n  getCPOLocations,\n  updateCPOLocation,\n  deleteLocation,\n} from '../actions/locationAction';\nimport {\n  Button,\n  Card,\n  Form,\n  Container,\n  Row,\n  Col,\n  Modal,\n  OverlayTrigger,\n  Tooltip,\n  Nav,\n  ListGroupItem,\n  ListGroup,\n} from 'react-bootstrap';\nimport { usePosition } from '../hooks/usePosition';\nimport connectorTypeOptions from './../constants/connectorTypes';\n\nfunction Borne({\n  locations,\n  loading,\n  addLocation,\n  user,\n  getCPOLocations,\n  updateCPOLocation,\n  deleteLocation,\n}) {\n  const [currentStation, setcurrentStation] = useState({});\n\n  // Form initial values\n  // const initialValues = {\n  //   location_name: currentStation.location_name ?? '',\n  //   address: currentStation.address ?? user.address,\n  //   bookable: currentStation.bookable ?? false,\n  //   free_charging: currentStation.free_charging ?? false,\n  //   connection: currentStation.connection ?? '',\n  //   condition_acces: currentStation.condition_acces ?? '',\n  //   payment_by_card: currentStation.payment_by_card ?? false,\n  //   location_type: currentStation.location_type ?? '',\n  //   postal_code: currentStation.postal_code ?? '',\n  //   tarif: currentStation.tarif ?? '',\n  // };\n\n  const initialValues = {\n    location_name: currentStation.location_name ?? '',\n    address: currentStation.address ?? user.address,\n    bookable: currentStation.bookable ?? false,\n    free_charging: currentStation.free_charging ?? false,\n    connection: currentStation.connection ?? '',\n    condition_acces: currentStation.condition_acces ?? '',\n    payment_by_card: currentStation.payment_by_card ?? false,\n    location_type: currentStation.location_type ?? '',\n    postal_code: currentStation.postal_code ?? '',\n    tarif: currentStation.tarif ?? '',\n  };\n  // Local State Management\n  const { latitude, longitude } = usePosition();\n  // Modal Add/Update\n  const [showModal, setshowModal] = useState(false);\n  // Modal Delete\n  const [showDeleteModal, setshowDeleteModal] = useState(false);\n  const [locationProperties, setlocationProperties] = useState(initialValues);\n  // Form functions\n  const handleInputChange = (value, fieldName) => {\n    setlocationProperties(prevState => ({ ...prevState, [fieldName]: value }));\n  };\n  // CRUD actions call\n  const _addLocation = _user => {\n    if (locationProperties) {\n      addLocation({\n        ...locationProperties,\n        position: {\n          latitude: latitude ? latitude.toString() : '49.2603667',\n          longitude: longitude ? longitude.toString() : '3.0872607',\n        },\n        userId: _user.id,\n      });\n      setlocationProperties(initialValues);\n      setshowModal(false);\n    } else return;\n  };\n  const _updateLocation = current => {\n    updateCPOLocation(locationProperties, current._id);\n    setshowModal(false);\n    setlocationProperties(initialValues);\n    setcurrentStation({});\n  };\n\n  const _deleteLocation = current => {\n    console.log(' _user.id', user.id);\n    deleteLocation(current._id, user.id);\n    setshowDeleteModal(false);\n    setcurrentStation({});\n  };\n\n  useEffect(() => {\n    getCPOLocations(user.id);\n  }, [getCPOLocations]);\n\n  useEffect(() => {\n    if (currentStation) setlocationProperties({ ...currentStation });\n  }, [currentStation]);\n\n  return (\n    <>\n      {loading ? (\n        <div> Chargement ...</div>\n      ) : (\n        <Container fluid>\n          <Button\n            className='btn-fill pull-right'\n            type='submit'\n            onClick={() => {\n              setcurrentStation({});\n              setshowModal(true);\n            }}\n          >\n            Nouvelle borne\n          </Button>\n          <hr />\n          {currentStation ? (\n            <>\n              <Modal\n                show={showModal}\n                onHide={() => setshowModal(false)}\n                className='search-modal text-center modal fade'\n              >\n                <Modal.Body>\n                  <div className='modal-content'>\n                    <div className='modal-body'>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title as='h4'>\n                            {currentStation._id\n                              ? `Modifier la borne ${currentStation.location_name}`\n                              : `Nouvelle borne`}\n                          </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                          <Form>\n                            <Row>\n                              <Col md='6'>\n                                <Form.Group>\n                                  <label>Titre</label>\n                                  <Form.Control\n                                    placeholder={\n                                      currentStation.location_name ?? 'Titre'\n                                    }\n                                    type='text'\n                                    name='location_name'\n                                    onChange={e =>\n                                      handleInputChange(\n                                        e.target.value,\n                                        e.target.name\n                                      )\n                                    }\n                                  />\n                                </Form.Group>\n                              </Col>\n                              <Col md='6'>\n                                <Form.Group>\n                                  <label>Type d'emplacement</label>\n                                  <Form.Control\n                                    placeholder={\n                                      currentStation.location_type ??\n                                      'Station service, parking,...'\n                                    }\n                                    type='text'\n                                    name='location_type'\n                                    onChange={e =>\n                                      handleInputChange(\n                                        e.target.value,\n                                        e.target.name\n                                      )\n                                    }\n                                  />\n                                </Form.Group>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col md='4'>\n                                <Form.Check\n                                  type='switch'\n                                  id='isbookable-switch'\n                                  label='Reservation'\n                                  value={locationProperties.bookable}\n                                  onChange={e =>\n                                    setlocationProperties(prev => ({\n                                      ...prev,\n                                      bookable: !prev.bookable,\n                                    }))\n                                  }\n                                />\n                              </Col>\n                              <Col md='4'>\n                                <Form.Check\n                                  type='switch'\n                                  id='isLive-switch'\n                                  label='Live'\n                                  value={locationProperties.status}\n                                  onChange={e =>\n                                    setlocationProperties(prev => ({\n                                      ...prev,\n                                      status: !prev.status,\n                                    }))\n                                  }\n                                />\n                              </Col>\n                              <Col md='4'>\n                                <Form.Check\n                                  type='switch'\n                                  id='free_charging-switch'\n                                  label='Recharge gratuite'\n                                  onChange={e =>\n                                    setlocationProperties(prev => ({\n                                      ...prev,\n                                      free_charging: !prev.free_charging,\n                                    }))\n                                  }\n                                />\n                              </Col>\n                            </Row>\n                            {locationProperties.free_charging ? (\n                              <br />\n                            ) : (\n                              <Row>\n                                <Col md='12'>\n                                  <Form.Group>\n                                    <label>Tarif</label>\n                                    <Form.Control\n                                      placeholder='Prix de recharge'\n                                      type='text'\n                                      name='tarif'\n                                      onChange={e =>\n                                        handleInputChange(\n                                          e.target.value,\n                                          e.target.name\n                                        )\n                                      }\n                                    />\n                                  </Form.Group>\n                                </Col>\n                              </Row>\n                            )}\n                            <Row>\n                              <Col md='12'>\n                                <Form.Group>\n                                  <label>Condition d'accès</label>\n                                  <Form.Control\n                                    placeholder={`Conditions d'accès`}\n                                    type='text'\n                                    name='condition_acces'\n                                    onChange={e =>\n                                      handleInputChange(\n                                        e.target.value,\n                                        e.target.name\n                                      )\n                                    }\n                                  />\n                                </Form.Group>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col>\n                                <Form.Control\n                                  aria-label='Connector select'\n                                  as='select'\n                                  custom\n                                  name='standard'\n                                  onChange={e =>\n                                    handleInputChange(\n                                      e.target.value,\n                                      e.target.name\n                                    )\n                                  }\n                                >\n                                  <option defaultValue=''>\n                                    Type de connecteur\n                                  </option>\n                                  {connectorTypeOptions.map((option, idx) => (\n                                    <option key={idx} value={option.value}>\n                                      {option.label}\n                                    </option>\n                                  ))}\n                                </Form.Control>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col md='6'>\n                                <Form.Group>\n                                  <label>Latitude</label>\n                                  <Form.Control\n                                    disabled\n                                    type='text'\n                                    value={latitude ? latitude : null}\n                                  />\n                                </Form.Group>\n                              </Col>\n                              <Col md='6'>\n                                <Form.Group>\n                                  <label>Longitude</label>\n                                  <Form.Control\n                                    disabled\n                                    type='text'\n                                    value={longitude ? longitude : null}\n                                  />\n                                </Form.Group>\n                              </Col>\n                            </Row>\n                          </Form>\n                          {currentStation._id ? (\n                            <Button\n                              className='btn-fill pull-right'\n                              type='submit'\n                              onClick={() => _updateLocation(currentStation)}\n                            >\n                              Modifier\n                            </Button>\n                          ) : (\n                            <Button\n                              className='btn-fill pull-right'\n                              type='submit'\n                              onClick={() => _addLocation(user)}\n                            >\n                              Ajouter\n                            </Button>\n                          )}\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </div>\n                </Modal.Body>\n              </Modal>\n              <Modal\n                show={showDeleteModal}\n                onHide={() => setshowDeleteModal(false)}\n                className='search-modal text-center modal fade'\n              >\n                <Modal.Body>\n                  <div className='modal-content'>\n                    <div className='modal-body'>\n                      <Row>\n                        <Col>\n                          {`Supprimer la borne ${currentStation.location_name}`}\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col>\n                          <Button\n                            className='btn-fill pull-right'\n                            type='submit'\n                            onClick={() => {\n                              _deleteLocation(currentStation);\n                            }}\n                          >\n                            Supprimer\n                          </Button>\n                        </Col>\n                        <Col>\n                          <Button\n                            className='btn-fill pull-right'\n                            type='submit'\n                            onClick={() => setshowDeleteModal(false)}\n                          >\n                            Annuler\n                          </Button>\n                        </Col>\n                      </Row>\n                    </div>\n                  </div>\n                </Modal.Body>\n              </Modal>\n            </>\n          ) : (\n            <hr />\n          )}\n\n          <Row>\n            {locations?.length ? (\n              locations?.map(location => {\n                return (\n                  <Col md='4'>\n                    <Card style={{ width: '18rem' }}>\n                      <Card.Header>{location.location_name}</Card.Header>\n                      <Card.Body>\n                        <Card.Title>{location.address}</Card.Title>\n                        <br />\n                        <Card.Subtitle>{location.location_type}</Card.Subtitle>\n                        <br />\n                        <ListGroup className='list-group-flush'>\n                          <ListGroupItem>\n                            {location.free_charging\n                              ? 'Recharge gratuite'\n                              : 'Recharge payante'}\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            {location.bookable\n                              ? 'Reservable'\n                              : 'Non reservable'}\n                          </ListGroupItem>\n                          <ListGroupItem>\n                            {location.condition_acces}\n                          </ListGroupItem>\n                        </ListGroup>\n                      </Card.Body>\n                      <Card.Footer>\n                        <small className='text-muted'>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id='tooltip-488980961'>Modifier</Tooltip>\n                            }\n                          >\n                            <Button\n                              className='btn-simple btn-link p-1'\n                              type='button'\n                              variant='info'\n                              onClick={() => {\n                                setcurrentStation(location);\n                                setshowModal(true);\n                                console.log(currentStation);\n                              }}\n                            >\n                              <i className='fas fa-edit' />\n                            </Button>\n                          </OverlayTrigger>\n                          <OverlayTrigger\n                            overlay={\n                              <Tooltip id='tooltip-506045838'>\n                                Supprimer\n                              </Tooltip>\n                            }\n                          >\n                            <Button\n                              className='btn-simple btn-link p-1'\n                              type='button'\n                              variant='danger'\n                              onClick={() => {\n                                setcurrentStation(location);\n                                setshowDeleteModal(true);\n                              }}\n                            >\n                              <i className='fas fa-times' />\n                            </Button>\n                          </OverlayTrigger>\n                        </small>\n                      </Card.Footer>\n                    </Card>\n                  </Col>\n                );\n              })\n            ) : (\n              <p>Aucune borne pour le moment</p>\n            )}\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  loading: state.vehicule.loading,\n  user: state.auth.user,\n  locations: state.location.locations,\n});\n\nexport default connect(mapStateToProps, {\n  getCPOLocations,\n  addLocation,\n  updateCPOLocation,\n  deleteLocation,\n})(Borne);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Vehicule.js",["211"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  addVehicule,\n  updateVehicule,\n  getVehicules,\n  deleteVehicule,\n} from '../actions/vehiculeActions';\nimport connectorTypeOptions from './../constants/connectorTypes';\nimport {\n  Button,\n  Card,\n  Form,\n  Modal,\n  Container,\n  Row,\n  Col,\n  OverlayTrigger,\n  ListGroupItem,\n  Tooltip,\n} from 'react-bootstrap';\n\nfunction Vehicule({\n  vehicules,\n  loading,\n  addVehicule,\n  user,\n  getVehicules,\n  updateVehicule,\n  deleteVehicule,\n}) {\n  // Current Vehicule\n  const [currentVehicule, setcurrentVehicule] = useState({});\n  // Form initial values\n  const initalValues = {\n    brand: currentVehicule.brand ?? '',\n    model: currentVehicule.model ?? '',\n    standard: currentVehicule.standard ?? '',\n    format: currentVehicule.format ?? '',\n    power_type: currentVehicule.power_type ?? '',\n    max_voltage: currentVehicule.max_voltage ?? '',\n    max_amperage: currentVehicule.max_amperage ?? '',\n  };\n\n  // Local State Management\n  const [vehiculeProperties, setvehiculeProperties] = useState(initalValues);\n  // Modal Add/Update\n  const [showModal, setshowModal] = useState(false);\n  // Modal Delete\n  const [showDeleteModal, setshowDeleteModal] = useState(false);\n  // Form functions\n  const handleInputChange = (value, fieldName) => {\n    setvehiculeProperties(prevState => ({ ...prevState, [fieldName]: value }));\n  };\n  // CRUD actions call\n  const _addVehicule = _user => {\n    if (vehiculeProperties.brand !== '' && vehiculeProperties.model !== '') {\n      addVehicule({ ...vehiculeProperties, userId: _user.id });\n      setvehiculeProperties(initalValues);\n      setshowModal(false);\n    } else return;\n  };\n\n  const _updateVehicule = current => {\n    console.log('vehiculeProperties', vehiculeProperties, 'current', current);\n    updateVehicule(vehiculeProperties, current._id);\n    setcurrentVehicule({});\n    setvehiculeProperties(initalValues);\n    setshowModal(false);\n    console.log('vehiculeProperties', vehiculeProperties, 'current', current);\n  };\n\n  const _deleteVehicule = current => {\n    deleteVehicule(current._id, user.id);\n    setshowDeleteModal(false);\n    setcurrentVehicule({});\n  };\n\n  useEffect(() => {\n    getVehicules(user.id);\n  }, []);\n\n  useEffect(() => {\n    if (currentVehicule) setvehiculeProperties({ ...currentVehicule });\n  }, [currentVehicule]);\n\n  return (\n    <>\n      <Button\n        className='btn-fill pull-right'\n        type='submit'\n        onClick={() => {\n          setcurrentVehicule({});\n          setvehiculeProperties(initalValues);\n\n          setshowModal(true);\n        }}\n      >\n        Nouveau véhicule\n      </Button>\n      {loading ? (\n        <div> Chargement ...</div>\n      ) : (\n        <Container fluid>\n          <hr />\n          {currentVehicule ? (\n            <>\n              <Modal\n                show={showModal}\n                onHide={() => setshowModal(false)}\n                className='search-modal text-center modal fade'\n              >\n                <Modal.Body>\n                  <Card>\n                    <Card.Header>\n                      <Card.Title as='h4'>\n                        {currentVehicule._id\n                          ? `EV: ${currentVehicule.brand}`\n                          : `Nouveau vehicule`}\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body>\n                      <Form>\n                        <Row>\n                          <Col md='6'>\n                            <Form.Group>\n                              <label>Marque</label>\n                              <Form.Control\n                                placeholder='Marque'\n                                type='text'\n                                name='brand'\n                                value={vehiculeProperties.brand ?? ''}\n                                onChange={e =>\n                                  handleInputChange(\n                                    e.target.value,\n                                    e.target.name\n                                  )\n                                }\n                              />\n                            </Form.Group>\n                          </Col>\n                          <Col md='6'>\n                            <Form.Group>\n                              <label>Modèle</label>\n                              <Form.Control\n                                placeholder='Modèle'\n                                type='text'\n                                name='model'\n                                value={vehiculeProperties.model ?? ''}\n                                onChange={e =>\n                                  handleInputChange(\n                                    e.target.value,\n                                    e.target.name\n                                  )\n                                }\n                              />\n                            </Form.Group>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col>\n                            <Form.Control\n                              aria-label='Connector select'\n                              as='select'\n                              custom\n                              name='standard'\n                              onChange={e =>\n                                handleInputChange(e.target.value, e.target.name)\n                              }\n                            >\n                              <option defaultValue=''>\n                                Type de connecteur\n                              </option>\n                              {connectorTypeOptions.map((option, idx) => (\n                                <option key={idx} value={option.value}>\n                                  {option.label}\n                                </option>\n                              ))}\n                            </Form.Control>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col md='6'>\n                            <Form.Group>\n                              <label>Voltage Maximum</label>\n                              <Form.Control\n                                placeholder='Voltage'\n                                type='text'\n                                name='max_voltage'\n                                value={vehiculeProperties.max_voltage ?? ''}\n                                onChange={e =>\n                                  handleInputChange(\n                                    e.target.value,\n                                    e.target.name\n                                  )\n                                }\n                              />\n                            </Form.Group>\n                          </Col>\n                          <Col md='6'>\n                            <Form.Group>\n                              <label>Ampérage Maximum</label>\n                              <Form.Control\n                                placeholder='Ampérage'\n                                type='text'\n                                name='max_amperage'\n                                value={vehiculeProperties.max_amperage ?? ''}\n                                onChange={e =>\n                                  handleInputChange(\n                                    e.target.value,\n                                    e.target.name\n                                  )\n                                }\n                              />\n                            </Form.Group>\n                          </Col>\n                        </Row>\n                      </Form>\n                      {currentVehicule._id ? (\n                        <Button\n                          className='btn-fill pull-right'\n                          type='submit'\n                          onClick={() => _updateVehicule(currentVehicule)}\n                        >\n                          Modifier\n                        </Button>\n                      ) : (\n                        <Button\n                          className='btn-fill pull-right'\n                          type='submit'\n                          onClick={() => _addVehicule(user)}\n                        >\n                          Ajouter\n                        </Button>\n                      )}\n                    </Card.Body>\n                  </Card>\n                </Modal.Body>\n              </Modal>\n              <Modal\n                show={showDeleteModal}\n                onHide={() => setshowDeleteModal(false)}\n                className='search-modal text-center modal fade'\n              >\n                <Modal.Body>\n                  <div className='modal-content'>\n                    <div className='modal-body'>\n                      <Card>\n                        <Card.Header>\n                          <Card.Title as='h4'>\n                            {`Supprimer EV ${currentVehicule.brand}`}\n                          </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                          <Button\n                            className='btn-fill pull-right'\n                            type='submit'\n                            onClick={() => {\n                              _deleteVehicule(currentVehicule);\n                            }}\n                          >\n                            Supprimer\n                          </Button>\n                          <Button\n                            className='btn-fill pull-right'\n                            type='submit'\n                            onClick={() => setshowDeleteModal(false)}\n                          >\n                            Annuler\n                          </Button>\n                        </Card.Body>\n                      </Card>\n                    </div>\n                  </div>\n                </Modal.Body>\n              </Modal>\n            </>\n          ) : (\n            <hr />\n          )}\n          <Row>\n            <Col md='12'>\n              <Row>\n                {vehicules?.length ? (\n                  vehicules?.map(vehicule => {\n                    return (\n                      <Col md='6'>\n                        <Card style={{ width: '18rem' }}>\n                          <Card.Body>\n                            <h3 className='title'>\n                              {vehicule.brand},{vehicule.model}\n                            </h3>\n\n                            <br />\n\n                            <ListGroupItem>\n                              {vehicule.standard}{' '}\n                              {vehicule.standard ? (\n                                <img\n                                  alt='...'\n                                  className='avatar border-gray'\n                                  src={\n                                    require(`assets/img/connectors/${vehicule.standard}.png`)\n                                      .default\n                                  }\n                                />\n                              ) : (\n                                <br />\n                              )}{' '}\n                            </ListGroupItem>\n\n                            <ListGroupItem>\n                              Voltage: {vehicule.max_voltage}\n                            </ListGroupItem>\n                            <ListGroupItem>\n                              Ampérage: {vehicule.max_amperage}\n                            </ListGroupItem>\n                            <OverlayTrigger\n                              overlay={\n                                <Tooltip id='tooltip-488980961'>\n                                  Modifier\n                                </Tooltip>\n                              }\n                            >\n                              <Button\n                                className='btn-simple btn-link p-1'\n                                type='button'\n                                variant='info'\n                                onClick={() => {\n                                  setcurrentVehicule(vehicule);\n                                  setshowModal(true);\n                                  console.log(\n                                    'currentVehicule',\n                                    currentVehicule\n                                  );\n                                }}\n                              >\n                                <i className='fas fa-edit' />\n                              </Button>\n                            </OverlayTrigger>\n                            <OverlayTrigger\n                              overlay={\n                                <Tooltip id='tooltip-506045838'>\n                                  Supprimer\n                                </Tooltip>\n                              }\n                            >\n                              <Button\n                                className='btn-simple btn-link p-1'\n                                type='button'\n                                variant='danger'\n                                onClick={() => {\n                                  setcurrentVehicule(vehicule);\n                                  setshowDeleteModal(true);\n                                }}\n                              >\n                                <i className='fas fa-times' />\n                              </Button>\n                            </OverlayTrigger>\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    );\n                  })\n                ) : (\n                  <p>Aucun EV pour le moment</p>\n                )}\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  vehicules: state.vehicule.vehicules,\n  loading: state.vehicule.loading,\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps, {\n  getVehicules,\n  addVehicule,\n  updateVehicule,\n  deleteVehicule,\n})(Vehicule);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/views/Dashboard.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/api.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/greenEnergyTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/bookable.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/payment.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/guest/MapGuest.js",["212","213"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\n\nfunction MapGuest({ options, className, locations, getLocations }) {\n  const ref = useRef();\n  const [map, setMap] = useState(null);\n  // const { latitude, longitude } = usePosition();\n  const [markers, setMarkers] = useState();\n  const [selectedLatLng, setselectedLatLng] = useState({\n    latitude: 49.2603667,\n    longitude: 3.0872607,\n  });\n  const [showModal, setshowModal] = useState(false);\n  const [currentLocation, setcurrentLocation] = useState({});\n\n  //  removes markers from map\n  const removeMarkers = markersArray => {\n    markersArray?.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n  };\n  const addMarkers = (locs, mapInstance) => {\n    removeMarkers(markers);\n    const tmpMarkers = [];\n    const bounds = new window.google.maps.LatLngBounds(selectedLatLng);\n\n    locs.map(location => {\n      bounds.extend(\n        new window.google.maps.LatLng(\n          location.AddressInfo.Latitude,\n          location.AddressInfo.Longitude\n        )\n      );\n      // Initialize marker\n      const marker = new window.google.maps.Marker({\n        position: new window.google.maps.LatLng(\n          location.AddressInfo.Latitude,\n          location.AddressInfo.Longitude\n        ),\n        title: location.AddressInfo.Title,\n      });\n      marker.setMap(mapInstance);\n\n      marker.addListener('click', () => {\n        setshowModal(true);\n        setcurrentLocation(location);\n      });\n\n      selectedLatLng\n        ? bounds.extend(new window.google.maps.LatLng(selectedLatLng))\n        : bounds.extend(\n            new window.google.maps.LatLng(\n              location.AddressInfo.Latitude,\n              location.AddressInfo.Longitude\n            )\n          );\n      tmpMarkers.push(marker);\n    });\n\n    setMarkers(tmpMarkers);\n    mapInstance.fitBounds(bounds);\n  };\n  useEffect(() => {\n    const onLoad = () => {\n      const options = {\n        lat: 45.891181,\n        lng: 4.8223994,\n      };\n\n      const map = new window.google.maps.Map(ref.current, {\n        center: options,\n        zoom: 15,\n      });\n\n      if (map) {\n        console.log('map', map);\n        setMap(map);\n        getLocations();\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, [options, getLocations]);\n\n  useEffect(() => {\n    getLocations();\n  }, []);\n\n  useEffect(() => {\n    if (locations.length && map) {\n      addMarkers(locations, map);\n    }\n  }, [locations, map]);\n\n  // if (map && typeof onMount === `function`) onMount(map, onMountProps);\n\n  return (\n    <div\n      style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n      {...{ ref, className }}\n    />\n  );\n}\n\n// Map.defaultProps = mapOptions;\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n});\n\nexport default connect(mapStateToProps, { getLocations })(MapGuest);\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/locationAction.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectionType.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/actions/vehiculeActions.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorFormat.js",[],[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/powerTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/cpo/Map.js",["214"],"import React, { useEffect, useRef, useState } from 'react';\nimport { getCPOLocations } from '../../actions/locationAction';\nimport { connect } from 'react-redux';\nimport { usePosition } from '../../hooks/usePosition';\nimport { Alert, Modal } from 'react-bootstrap';\n\nconst Map = ({ user, locations, filters }) => {\n  // const  = props;\n\n  const [map, setMap] = useState();\n  const ref = useRef(null);\n  const { latitude, longitude } = usePosition();\n  const [markers, setMarkers] = useState([]);\n\n  const removeMarkers = markersArray => {\n    markersArray?.forEach(marker => marker.setMap(null));\n    setMarkers([]);\n  };\n  const addMarkers = (locs, mapInstance) => {\n    console.log('here?');\n    markers.forEach(marker => marker.setMap(null));\n    // Deleting previous markers before adding the new list of markers\n    const tmpMarkers = [];\n    const bounds = new window.google.maps.LatLngBounds();\n    if (locs.length > 0) {\n      locs.forEach(location => {\n        // debugger; // eslint-disable-line no-debugger\n        // console.log('=========== ~ file: Map.js ~ line 37 ~ location', location);\n        const marker = new window.google.maps.Marker({\n          position: new window.google.maps.LatLng(\n            parseFloat(location.coordinates.latitude),\n            parseFloat(location.coordinates.longitude)\n          ),\n          // title: location.station_name,\n        });\n        marker.setMap(mapInstance);\n\n        console.log('marker', locs);\n\n        const infowindow = new window.google.maps.InfoWindow({\n          content: `<p>Adresse: ${location.address}</p>\n          <ul>\n            <li><strong>Conditions d'accés</strong>: ${location.condition_acces}</li>\n            <li><strong>Type d'emplacement</strong>: ${location.location_type}</li>\n            <li><strong>Phone</strong>: <a href=\"tel:${location.telephone_operateur}\">${location.telephone_operateur}</a></li>\n          </ul>`,\n          boxStyle: {\n            width: '300px',\n            height: '300px',\n          },\n        });\n\n        bounds.extend(\n          new window.google.maps.LatLng(\n            location.coordinates.latitude,\n            location.coordinates.longitude\n          )\n        );\n\n        marker.addListener('click', () => {\n          infowindow.open({\n            anchor: marker,\n            map: mapInstance,\n            shouldFocus: true,\n          });\n        });\n\n        tmpMarkers.push(marker);\n      });\n    }\n\n    mapInstance.fitBounds(bounds);\n  };\n  useEffect(() => {\n    const onLoad = () => {\n      try {\n        const options = {\n          lat: 45.891181, //45.891181\n          lng: 7, // 4.8223994\n        };\n        const _map = new window.google.maps.Map(ref.current, {\n          center: options,\n          zoom: 6,\n        });\n        setMap(_map);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (!window.google) {\n      const script = document.createElement(`script`);\n      // + process.env.GOOGLE_MAPS_API_KEY;\n      script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBwo-QDe0-NuBA5EZSM9UiyAnTYok74maU`;\n      document.head.append(script);\n      script.addEventListener(`load`, onLoad);\n\n      // return () => script.removeEventListener(`load`, onLoad);\n    } else onLoad();\n  }, []);\n\n  useEffect(() => {\n    getCPOLocations(user.id);\n    console.log('user', user);\n  });\n\n  // Drop Markers\n  useEffect(() => {\n    if (locations.length && map) {\n      // .renderingType != 'UNINITIALIZED'\n      addMarkers(locations, map, addedMarkers => setMarkers(addedMarkers));\n    }\n    // console.log('locations from the server', locations);\n  }, [locations, map]);\n\n  // Map Filter\n  // useEffect(() => {\n  //   let filterdLoc = locations;\n  //   if (map && locations) {\n  //     // console.log(filters, 'filters useEffect');\n  //     if (filters.isGreenEnergy) {\n  //       filterdLoc = locations.filter(\n  //         loc => loc.is_green_energy == filters.isGreenEnergy\n  //       );\n  //       addMarkers(filterdLoc, map);\n  //     }\n  //     if (filters.isBookable) {\n  //       filterdLoc = locations.filter(\n  //         loc => loc.bookable == filters.isBookable\n  //       );\n  //       addMarkers(filterdLoc, map);\n  //     }\n  //     if (filters.isCbPayment) {\n  //       filterdLoc = locations.filter(\n  //         loc => loc.payment_by_card == filters.isCbPayment\n  //       );\n  //       addMarkers(filterdLoc, map);\n  //     }\n  //     if (filters.isFreeCharging) {\n  //       filterdLoc = locations.filter(\n  //         loc => loc.free_charging == filters.isFreeCharging\n  //       );\n  //       addMarkers(filterdLoc, map);\n  //     }\n  //     if (filters.isAvailable) {\n  //       filterdLoc = locations.filter(\n  //         loc => loc.payment_by_card == filters.isAvailable\n  //       );\n  //       addMarkers(filterdLoc, map);\n  //     }\n  //     if (filters.supportsTwoWheel) {\n  //       filterdLoc = locations.filter(\n  //         loc => loc.two_wheel == filters.supportsTwoWheel\n  //       );\n  //       addMarkers(filterdLoc, map);\n  //     }\n\n  //     // if (!filters) {\n  //     //   addMarkers(filterdLoc, map);\n  //     // }\n  //   }\n  //   console.log('filterdLoc', filterdLoc);\n  // }, [filters, locations]);\n\n  return (\n    <>\n      <div\n        style={{ height: `60vh`, margin: `1em 0`, borderRadius: `0.5em` }}\n        ref={ref}\n      />\n    </>\n  );\n};\n\n// Map.defaultProps = mapOptions;\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  locations: state.location.locations,\n  loading: state.location.loading,\n  user: state.auth.user,\n});\n\n// export default ;\nexport default connect(mapStateToProps, { getCPOLocations })(Map);\n// export default React.forwardRef((props, ref) => (\n//   <ConnectedMap {...props} forwaredRef={ref} />\n// ));\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/hooks/usePosition.js",["215"],"import { useState, useEffect } from 'react';\n\nconst defaultSettings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0,\n};\n\nexport const usePosition = (watch = false, settings = defaultSettings) => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({ coords, timestamp }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      speed: coords.speed,\n      timestamp,\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    if (!navigator || !navigator.geolocation) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    let watcher = null;\n    if (watch) {\n      watcher = navigator.geolocation.watchPosition(\n        onChange,\n        onError,\n        settings\n      );\n    } else {\n      navigator.geolocation.getCurrentPosition(onChange, onError, settings);\n    }\n\n    return () => watcher && navigator.geolocation.clearWatch(watcher);\n  }, [settings.enableHighAccuracy, settings.timeout, settings.maximumAge]);\n\n  return { ...position, error };\n};\n","/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/connectorTypes.js",[],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/components/msp/Map.js",["216","217","218","219"],"/home/unfoat/Documents/menaps/light-bootstrap-dashboard-react/src/constants/roles.js",[],{"ruleId":"220","severity":1,"message":"221","line":105,"column":6,"nodeType":"222","endLine":105,"endColumn":23,"suggestions":"223"},{"ruleId":"220","severity":1,"message":"224","line":81,"column":6,"nodeType":"222","endLine":81,"endColumn":8,"suggestions":"225"},{"ruleId":"220","severity":1,"message":"226","line":95,"column":6,"nodeType":"222","endLine":95,"endColumn":8,"suggestions":"227"},{"ruleId":"220","severity":1,"message":"228","line":101,"column":6,"nodeType":"222","endLine":101,"endColumn":22,"suggestions":"229"},{"ruleId":"220","severity":1,"message":"228","line":114,"column":6,"nodeType":"222","endLine":114,"endColumn":22,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":45,"column":6,"nodeType":"222","endLine":45,"endColumn":74,"suggestions":"232"},{"ruleId":"220","severity":1,"message":"226","line":179,"column":6,"nodeType":"222","endLine":179,"endColumn":8,"suggestions":"233"},{"ruleId":"220","severity":1,"message":"234","line":192,"column":6,"nodeType":"222","endLine":192,"endColumn":24,"suggestions":"235"},{"ruleId":"220","severity":1,"message":"236","line":202,"column":6,"nodeType":"222","endLine":202,"endColumn":24,"suggestions":"237"},{"ruleId":"220","severity":1,"message":"238","line":237,"column":6,"nodeType":"222","endLine":237,"endColumn":15,"suggestions":"239"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["240"],"React Hook useEffect has missing dependencies: 'getVehicules' and 'user.id'. Either include them or remove the dependency array. If 'getVehicules' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array. If 'getLocations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["242"],"React Hook useEffect has a missing dependency: 'addMarkers'. Either include it or remove the dependency array.",["243"],["244"],"React Hook useEffect has missing dependencies: 'settings' and 'watch'. Either include them or remove the dependency array.",["245"],["246"],"React Hook useEffect has a missing dependency: 'getLocationsByConnectorType'. Either include it or remove the dependency array. If 'getLocationsByConnectorType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["247"],"React Hook useEffect has missing dependencies: 'addMarkers' and 'currentLocation'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has missing dependencies: 'addMarkers', 'carte', and 'locations'. Either include them or remove the dependency array.",["249"],{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"259","fix":"260"},{"desc":"254","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [getCPOLocations, user.id]",{"range":"268","text":"269"},"Update the dependencies array to be: [getVehicules, user.id]",{"range":"270","text":"271"},"Update the dependencies array to be: [getLocations]",{"range":"272","text":"273"},"Update the dependencies array to be: [addMarkers, locations, map]",{"range":"274","text":"275"},{"range":"276","text":"275"},"Update the dependencies array to be: [settings.enableHighAccuracy, settings.timeout, settings.maximumAge, watch, settings]",{"range":"277","text":"278"},{"range":"279","text":"273"},"Update the dependencies array to be: [connectiontypeid, getLocationsByConnectorType]",{"range":"280","text":"281"},"Update the dependencies array to be: [locations, carte, currentLocation, addMarkers]",{"range":"282","text":"283"},"Update the dependencies array to be: [addMarkers, carte, filters, locations]",{"range":"284","text":"285"},[3202,3219],"[getCPOLocations, user.id]",[2265,2267],"[getVehicules, user.id]",[2783,2785],"[getLocations]",[2889,2905],"[addMarkers, locations, map]",[3604,3620],[1066,1134],"[settings.enableHighAccuracy, settings.timeout, settings.maximumAge, watch, settings]",[5237,5239],[5547,5565],"[connectiontypeid, getLocationsByConnectorType]",[5834,5852],"[locations, carte, currentLocation, addMarkers]",[6895,6904],"[addMarkers, carte, filters, locations]"]